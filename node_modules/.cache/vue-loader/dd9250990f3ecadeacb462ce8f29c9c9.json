{"remainingRequest":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/src/components/bdadd5_List.vue?vue&type=template&id=39980011&","dependencies":[{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/src/components/bdadd5_List.vue","mtime":1654922305433},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}