{"remainingRequest":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/src/components/bkadd4_Mdf.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/src/components/bkadd4_Mdf.vue","mtime":1652775051608},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBUdXRvcmlhbERhdGFTZXJ2aWNlIGZyb20gIi4uL3NlcnZpY2VzL1NlYXRQcmVwYXJlU2VydmljZSI7CmltcG9ydCBQbXREYXRhU2VydmljZSBmcm9tICIuLi9zZXJ2aWNlcy9QbXRTZXJ2aWNlIjsKCmltcG9ydCBWdWUgZnJvbSAndnVlJyAKaW1wb3J0IEpzb25DU1YgZnJvbSAndnVlLWpzb24tY3N2JwpWdWUuY29tcG9uZW50KCdkb3dubG9hZENzdicsIEpzb25DU1YpCgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAidHV0b3JpYWwiLAogICAgcHJvcHM6IFsidHV0b3JpYWwiXSwgCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHRtcDogewogICAgICAgICAgICAgICAgbWVtbzogIiIsCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHRvZ2dsZV9EZXZ0b29sOiIiLAogCiAgICAgICAgICAgICAvLyAtIC0gLSAtIHNlbGVjdG9yIOmBuOaTh+WZqCAtIC0gLQogICAgICAgICAgIAogICAgICAgICAgICBzdGVwc19uYW1lOiBbICLpoJDlhYjloavlr6siLCAi5aCx5Yiw57mz6LK7IiwgIuWuieaOkumdtuS9jSIsJ+eiuuiqjeiZn+eivOeJjCcsICLov73llY/nuozmmYIiLCAi5YWl5biz55m76KiYIiwgIuW/q+mAn+WFpeWgtCJdLAogICAgICAgICAgICBwbHlfc3RhdHU6IFsi6aaW5qyhIiwgIue6jOaZgiIsICLlhY3lrokiLCAi57e057+SIiwgIuS4iuiqsiJdLAogICAgICAgICAgICBwbHlfdHlwZTogWyLmlaPlrqIiLCAi6Ieq5YKZ5byTIiwgIuWtuOWToSIsICLmmI7mmJ8iLCAi6YG45omLIiwgIuaciOWNoSJdLAogICAgICAgICAgICBwbHlfYW10OiBbICIxIiwgIjIiLCAiMyIsICI0IiwgIjUiLCAiNiIsICI3IiwgIjgiLCAiOSIsICIxMCIsIjExIiwgIjEyIiwgIjEzIiwgIjE0IiwgIjE1IiwgIjE2IiwgIjE3IiwgIjE4IiwgIjE5IiwiMjAiLCAiMjEiLCAiMjIiIF0sCiAgICAgICAgICAgIAogICAgICAgICAgICBsZWZ0X3RpbWVfaWR4OiBbIjE4OjAwIiwgIjE5OjAwIiwgIjIwOjAwIiwgIjIxOjAwIiwgIjIyOjAwIl0sCgogICAgICAgICAgICBwbXRfc3RhdHU6IFsi5bey5bu656uLIiwgIuW3suWvqeaguCIsICLlt7LlhaXluLMiLCAi5L2c5buiIl0sCiAgICAgICAgICAgIHBtdF90eXBlOiBbICLnj77ph5EiLCAiTG5pZVBheSIsICLkv6HnlKjljaEiLCAi57ay6YqA6L2J5bizIiwgIuWLleiMsuWIuCIsICLnt7Tnv5LliLgiLCBdLAoKICAgICAgICAgICAgdGFic19pZHhfbWlkOiBbIjAw5bCE566t5aC0IiwgIjAx5oeJ55So5bCE566tIiwgIjE15oqV5b2x5LqS5YuVIiwgIuWFqOmDqCJdLAogICAgICAgICAgICB0YWJzX2lkeF9kdGw6IFsgIumgkOiorSIsICLluLjnlKgiLCAiMDAwMeWgtOWcsCIsICIwMDAy56ef5byTIiwgIjAwMDPmtLvli5UiLCAiMDAwNOiqsueoiyIsICIwMDA16YGL5YuV5Y23IiwgIjAwOTnlhbblroMiLCAi6aOf5ZOBIiwi5bel5YW3Il0sCiAgICAgICAgICAgIHRhYnNfaWR4X2NudDogWyAiMDAwMeWgtOWcsCIsICIwMDAy56ef5byTIiwgIjAwMDPmtLvli5UiLCAiMDAwNOiqsueoiyIsICIwMDA16YGL5YuV5Y23IiwgIjAwOTnlhbblroMiLCAi6aOf5ZOBIiwgIuW3peWFtyIgXSwKICAgICAgICAgICAgIAogICAgICAgICAgICBoZHNfTGVmdDogWyAKICAgICAgICAgICAgICB7IHRleHQ6ICflkI3nqLEnLCB2YWx1ZTogJ25hbWUnIH0sCiAgICAgICAgICAgICAgeyB0ZXh0OiAn5raI6LK76YCy5bqmJywgdmFsdWU6ICdwbHlfc3RhdHUnIH0sIAogICAgICAgICAgICAgIHsgdGV4dDogJ+a2iOiyu+WWruiZnycsIHZhbHVlOiAncG10X3NubycgfSwKICAgICAgICAgICAgICB7IHRleHQ6ICfmlLblhaUnLCB2YWx1ZTogJ21lbW8nIH0sCiAgICAgICAgICAgICAgeyB0ZXh0OiAn54++6YeRJywgdmFsdWU6ICdtZW1vJyB9LAogICAgICAgICAgICAgIHsgdGV4dDogJ+e2sumKgOi9ieW4sycsIHZhbHVlOiAnbWVtbycgfSwKICAgICAgICAgICAgICB7IHRleHQ6ICfkv6HnlKjljaEnLCB2YWx1ZTogJ21lbW8nIH0sCiAgICAgICAgICAgICAgeyB0ZXh0OiAnTGluZVBheScsIHZhbHVlOiAnbWVtbycgfSwKICAgICAgICAgICAgICB7IHRleHQ6ICfli5XojLLliLgnLCB2YWx1ZTogJ21lbW8nIH0sCiAgICAgICAgICAgIF0sCgogICAgICAgICAgICAgaGVhZGVyczogWyAKICAgICAgICAgICAgICB7IHRleHQ6ICflkI3nqLEnLCB2YWx1ZTogJ25hbWUnIH0sCiAgICAgICAgICAgICAgeyB0ZXh0OiAn5ZCN56ixJywgdmFsdWU6ICdrZXknIH0sCiAgICAgICAgICAgICAgeyB0ZXh0OiAn54mM6JmfJywgdmFsdWU6ICdwbHlfYW10JyB9LCAKICAgICAgICAgICAgICB7IHRleHQ6ICfmiYvmqZ8nLCB2YWx1ZTogJ3Bob25lJyB9LAogICAgICAgICAgICAgIC8vIHsgdGV4dDogJ+mbouWgtOaZgumWkycsIHZhbHVlOiAnbGVmdF90aW1lJyB9LAogICAgICAgICAgICBdLAogICAgICAgICAgICAKICAgICAgICAgICAgLy8gLSAtIC0g5pqr5pmC5a655ZmoIC0gLSAtIAogICAgICAgICAgICBQbXRMaXN0czogW10sIAogICAgICAgICAgICB0dXRvcmlhbHM6IFtdLCAgCiAgICAgICAgICAgIHNlYXJjaDogIiIsCiAgICAgICAgICAgIHBheW5vdGVfc25vOiAiIiwgCiAgICAgICAgICAgIAogICAgICAgICAgICBhdXRvQ05UOiBmYWxzZSwKICAgICAgICAgICAgQmtpbmdfc2hvb3RQb3M6IGZhbHNlLAogICAgICAgICAgICBCa2luZ19UbXBfaWR4OiBmYWxzZSwKICAgICAgICAgICAgCiAgICAgICAgICAgIC8vIC0gLSAtIC0gVUkg5LuL6Z2i5Yik5pa35a655ZmoIC0gLSAtCiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIHNob3d3OiBmYWxzZSwKICAgICAgICAgICAgc2hvd3d3OiBmYWxzZSwKICAgICAgICAgICAgc2hvd3d3dzogZmFsc2UsCiAgICAgICAgICAgIG1lc3NhZ2U6ICLoq4vpgbjmk4fkuIDnrYbos4fmlpkiLAogICAgICAgICAgICBzdGVwX2lkeF9ub3c6IDUsIAogICAgICAgICAgICAKICAgICAgICAgICAgLy8gLSAtIC0gLSDmmqvmmYLmgKflrrnlmaggLSAtIC0KICAgICAgICAgICAganNvbjogIiIsIC8vIFJhZ2ljIFBkTGlzdAogICAgICAgICAgICB0YWJzX05vdzogbnVsbCwKICAgICAgICAgICAgVG1wQXJ5X3JhbmRvbUlkOiBbXSwKICAgICAgICAgICAgVG1wQXJ5X3RtcF9pZHg6IFtdLAogICAgICAgICAgICBUbXBBcnlfcGx5X3N0YXR1OiBbXSwKICAgICAgICAgICAgVG1wQXJ5X3BseV90eXBlOiBbXSwKCiAgICAgICAgICAgIFRtcEFyeV9XaWxsUHV0X3RtcF9pZHg6IFtdLAoKICAgICAgICAgICAgdG1wX2lkeF9mc3Q6MCwgIAogICAgICAgICAgICB0bXBfaWR4X2FyeTpbXSwgICAgICAgICAKICAgICAgICAgICAgLy8gc2hvb3RQb3NfZHRsIHRoaXMucG10LmR0bF8xLnBseV9hbXQgLFRtcEFyeV9XaWxsUHV0X3RtcF9pZHgKICAgICAgICAgICAgLy8gLSAtIC0g5pqr5pmC5a655ZmoIC0gLSAtIAogICAgICAgICAgICAgCiAgICAgICAgICAgIHBtdDogeyAKICAgICAgICAgICAgICAgIG5hbWU6ICIiLCAvLyDpoaflrqLlp5PlkI0gCiAgICAgICAgICAgICAgICBwaG9uZToiIiwgCiAgICAgICAgICAgICAgICBwbHlfYW10OiAiIiwvLyDlhaXloLTkurrmlbggCiAgICAgICAgICAgICAgICBwbHlTVEFUVTogIummluasoSIsLy8g5raI6LK75q2356iLCiAgICAgICAgICAgICAgICBsZWZ0X3RpbWU6IiIsCgogICAgICAgICAgICAgICAgLy8g54++6YeR5pS25YWlCgogICAgICAgICAgICAgICAgcG10X2FtdDogewogICAgICAgICAgICAgICAgICAgIG5lZWRfZ2V0OiAwLAogICAgICAgICAgICAgICAgICAgIHJlYWxfZ2V0OiAwLAogICAgICAgICAgICAgICAgICAgIGJsc2NmZzogIiIsCgogICAgICAgICAgICAgICAgICAgIHBheUNhc2g6IDAsCiAgICAgICAgICAgICAgICAgICAgcGF5TGluUGF5OiAwLAogICAgICAgICAgICAgICAgICAgIHBheUNUQ2FyZDogMCwKICAgICAgICAgICAgICAgICAgICBwYXlOZXRCYW5rOiAwLAogICAgICAgICAgICAgICAgICAgIHBheUdvdlRpazogMCwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAvLyDnmbvlhaXml6XmnJ8KICAgICAgICAgICAgICAgIGNyZWF0RGF0ZTogIiIsCiAgICAgICAgICAgICAgICAvLyDnmbvlhaXmmYLplpMKICAgICAgICAgICAgICAgIC8vIGNyZWF0VGltZTpuZXcgRGF0ZSgpLAogICAgICAgICAgICAgICAgLy8g5L2N572uCiAgICAgICAgICAgICAgICBzaG9vdFBvc19kdGw6IFtdLAoKICAgICAgICAgICAgICAgIC8vIOesrDHmrKHnmbvlhaXkvY3nva4KICAgICAgICAgICAgICAgIGR0bF8xOiB7CiAgICAgICAgICAgICAgICAgICAgcGRfc25vOiAiIiwKICAgICAgICAgICAgICAgICAgICBwZF9uYW1lOiAiIiwKICAgICAgICAgICAgICAgICAgICBwbHlfdHlwZTogIiIsCiAgICAgICAgICAgICAgICAgICAgcGx5X2FtdDogMCwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAvLyDnrKwy5qyh55m75YWlCiAgICAgICAgICAgICAgICBkdGxfMjogewogICAgICAgICAgICAgICAgICAgIHBkX3NubzogIiIsCiAgICAgICAgICAgICAgICAgICAgcGRfbmFtZTogIiIsCiAgICAgICAgICAgICAgICAgICAgcGx5X3R5cGU6ICIiLAogICAgICAgICAgICAgICAgICAgIHBseV9hbXQ6IDAsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9LAogICAgICAgICAgICBjdXJyZW50VHV0b3JpYWw6IHsKICAgICAgICAgICAgICAgIHNub19pZDogIiIsCgogICAgICAgICAgICAgICAgcG9zOiAiIiwKICAgICAgICAgICAgICAgIHNubzogIiIsCiAgICAgICAgICAgICAgICBzbm9faWR4OiAiIiwKICAgICAgICAgICAgICAgIGxlZnRfdGltZTogIiIsCiAgICAgICAgICAgICAgICB0bXBfaWR4OiAiIiwKICAgICAgICAgICAgICAgIG1lbW86ICIiLAoKICAgICAgICAgICAgICAgIHBseV90eXBlOiAiIiwKICAgICAgICAgICAgICAgIHBseV9zdGF0dTogIiIsCgogICAgICAgICAgICAgICAgcGF5bXRUeXA6ICIiLAoKICAgICAgICAgICAgICAgIHBkX3NubzogIiIsCgogICAgICAgICAgICAgICAgYW10OiAiIiwKICAgICAgICAgICAgICAgIHBheW10OiAiIiwKICAgICAgICAgICAgICAgIHNsdGVkOiBbXSwgCiAgICAgICAgICAgICAgICAvLyBwbGF5ZXJfZ3JvdXA6IiIsCiAgICAgICAgICAgIH0sCiAgICAgICAgfTsKICAgIH0sCiAgICB3YXRjaDogewogICAgICAgIHR1dG9yaWFsOiBmdW5jdGlvbih0dXRvcmlhbCkgewogICAgICAgICAgICB0aGlzLmN1cnJlbnRUdXRvcmlhbCA9IHsgLi4udHV0b3JpYWwgfTsKICAgICAgICAgICAgdGhpcy5tZXNzYWdlID0gIiI7CiAgICAgICAgfSwKCiAgICAgICAgY3RyX2xlZnRUaW1lKCkgewogICAgICAgICAgICB2YXIgZCA9IG5ldyBEYXRlKCk7CiAgICAgICAgICAgIGxldCByID0gZC5nZXRIb3VycygpOwogICAgICAgICAgICBpZiAociA8IDEyKSB7CiAgICAgICAgICAgICAgICB0aGlzLmZiX3RpbWUgPSAwOwogICAgICAgICAgICB9IGVsc2UgaWYgKHIgPj0gMTIgJiYgciA8PSAxOCkgewogICAgICAgICAgICAgICAgdGhpcy5mYl90aW1lID0gMTsKICAgICAgICAgICAgfSBlbHNlIGlmIChyID49IDE4ICYmIHIgPD0gMjMpIHsKICAgICAgICAgICAgICAgIHRoaXMuZmJfdGltZSA9IDI7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy5jdXJyZW50VHV0b3JpYWwubWVtbyA9IHRoaXMuZmJfdGltZSArICJ8fHx8IiArIHI7CiAgICAgICAgfSwKCiAgICAgICAgc3RlcHModmFsKSB7CiAgICAgICAgICAgIGlmICh0aGlzLnN0ZXBfaWR4X25vdyA+IHZhbCkgewogICAgICAgICAgICAgICAgdGhpcy5zdGVwX2lkeF9ub3cgPSB2YWw7CiAgICAgICAgICAgIH0KICAgICAgICB9LAoKICAgICAgICAKCiAgICAgICAgLy8gY2hfdG1wX2lkeCh2YWwpCiAgICAgICAgLy8gewogICAgICAgIC8vICAgbGV0IHIgPSAwCiAgICAgICAgLy8gICBpZih2YWwgPiAwKXsgciA9IHZhbCB9CiAgICAgICAgLy8gICByZXR1cm4gcgogICAgICAgIC8vIH0KICAgIH0sCgogICAgY3JlYXRlZDogZnVuY3Rpb24oKSB7CiAgICAgICAgZmV0Y2goCiAgICAgICAgICAgICAgICAiaHR0cHM6Ly93d3cucmFnaWMuY29tL3hpaHUvZm9ybXMvMTM3P2FwaSZBUElLZXk9Y0hCMldVUlJlR05ITHpOYVUxSnlaMmgwWWxWd2JXNURNMUptTjJWelJEVjVaVXRRTlZscmNYSnRaV1ZoWWpab1VIbDZVbVZXYm1rdlJrSTVaaTgyY3c9PSZsaXN0aW5nIgogICAgICAgICAgICApCiAgICAgICAgICAgIC50aGVuKChyKSA9PiByLmpzb24oKSkKICAgICAgICAgICAgLnRoZW4oKGpzb24pID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuanNvbiA9IGpzb247ICAKICAgICAgICAgICAgfSk7CiAgICB9LAoKICAgIG1ldGhvZHM6IHsKICAgICAgICBnZXRQcmljZShpZHhpbnB1dCkgewogICAgICAgICAgICBsZXQgciA9IDA7CiAgICAgICAgICAgIGxldCBjZmcgPSAwOwogICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuanNvbi5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgaWYgKGlkeGlucHV0ID09IHRoaXMuanNvbltpXS7llYblk4Hku6PomZ8pIHsKICAgICAgICAgICAgICAgICAgICBjZmcgPSBpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHIgPSB0aGlzLmpzb25bY2ZnXS7llYblk4Hlg7nmoLw7CiAgICAgICAgICAgIC8vIGlmKGlkeGlucHV0ID09IDEwMDExKXsgciA9IDEwMCB9CiAgICAgICAgICAgIC8vIGVsc2UgaWYoaWR4aW5wdXQgPT0gNTAwMDUpeyByID0gNTAwIH0KCiAgICAgICAgICAgIHJldHVybiByOwogICAgICAgIH0sCgogICAgICAgIHRtcF9pZHhfZnN0OjAsICAKICAgICAgICAgICAgICAgICAKLy8g5a+r5Yiw6YCZ6YKKLi4uCiAgICAgICAgQ05UX3RtcF9pZHgoKSB7CiAgICAgICAgICAgIGxldCByID0gdGhpcy50bXBfaWR4X2ZzdDsgIAogICAgICAgICAgICBsZXQgTWF4ID0gcGFyc2VJbnQodGhpcy50bXBfaWR4X2ZzdCkgKyBwYXJzZUludCh0aGlzLnBtdC5zaG9vdFBvc19kdGwubGVuZ3RoKSA7IAogICAgICAgICAgICBmb3IgKHZhciBpID0gcjsgaSA8IE1heDsgaSsrKSAKICAgICAgICAgICAgeyAKICAgICAgICAgICAgICB0aGlzLlRtcEFyeV90bXBfaWR4LnB1c2goaSkKICAgICAgICAgICAgICB0aGlzLlRtcEFyeV9wbHlfc3RhdHUucHVzaCgn6aaW5qyhJykgCiAgICAgICAgICAgICAgdGhpcy5UbXBBcnlfcGx5X3R5cGUucHVzaCgn5pWj5a6iJykgIAogICAgICAgICAgICB9ICAKICAgICAgICB9LAogICAgICAgIENOVG5lZWRfcG10KCkgewogICAgICAgICAgICBsZXQgciA9IDA7CiAgICAgICAgICAgIGxldCBpZHhpbnB1dCA9IHRoaXMucG10LmR0bF8xLnBkX3NubzsKICAgICAgICAgICAgaWYgKGlkeGlucHV0ID09IDEwMDExKSB7CiAgICAgICAgICAgICAgICByID0gMTAwOwogICAgICAgICAgICB9IGVsc2UgaWYgKGlkeGlucHV0ID09IDUwMDA1KSB7CiAgICAgICAgICAgICAgICByID0gNTAwOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMucG10LnBtdF9hbXQubmVlZF9nZXQgPSByICogcGFyc2VJbnQodGhpcy5wbXQuZHRsXzEucGx5X2FtdCk7CgogICAgICAgICAgICB0aGlzLkJMU19wbXQoKTsKICAgICAgICAgICAgdGhpcy5DTlRwbHlfYW10KCk7CiAgICAgICAgfSwKICAgICAgICBCTFNfcG10KCkgewogICAgICAgICAgICBsZXQgciA9CiAgICAgICAgICAgICAgICBwYXJzZUludCh0aGlzLnBtdC5wbXRfYW10LnBheUNhc2gpICsKICAgICAgICAgICAgICAgIHBhcnNlSW50KHRoaXMucG10LnBtdF9hbXQucGF5TGluUGF5KSArCiAgICAgICAgICAgICAgICBwYXJzZUludCh0aGlzLnBtdC5wbXRfYW10LnBheU5ldEJhbmspICsKICAgICAgICAgICAgICAgIHBhcnNlSW50KHRoaXMucG10LnBtdF9hbXQucGF5Q1RDYXJkKSArCiAgICAgICAgICAgICAgICBwYXJzZUludCh0aGlzLnBtdC5wbXRfYW10LnBheUdvdlRpayk7CgogICAgICAgICAgICBsZXQgZmVlZGJhY2sgPSB0aGlzLnBtdC5wbXRfYW10Lm5lZWRfZ2V0IC0gcjsKICAgICAgICAgICAgaWYgKHIgPT0gMCkgewogICAgICAgICAgICAgICAgdGhpcy5wbXQucG10X2FtdC5ibHNjZmcgPSAi5bCa5pyq57mz6LK7IjsKICAgICAgICAgICAgfSBlbHNlIGlmIChmZWVkYmFjayA9PSAwKSB7CiAgICAgICAgICAgICAgICB0aGlzLnBtdC5wbXRfYW10LmJsc2NmZyA9ICLliZvliZvlpb3vvIzmspLllY/poYwiOwogICAgICAgICAgICB9IGVsc2UgaWYgKGZlZWRiYWNrID4gMCkgewogICAgICAgICAgICAgICAgdGhpcy5wbXQucG10X2FtdC5ibHNjZmcgPSAi5bCR5LqGIiArIGZlZWRiYWNrICsgIuWFgyI7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoZmVlZGJhY2sgPCAwKSB7CiAgICAgICAgICAgICAgICB0aGlzLnBtdC5wbXRfYW10LmJsc2NmZyA9ICLlpJoiICsgZmVlZGJhY2sgKiAtMSArICLlhYMiOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBDTlRwbXRfQW10KCkgewogICAgICAgICAgICBsZXQgciA9CiAgICAgICAgICAgICAgICBwYXJzZUludCh0aGlzLnBtdC5wbXRfYW10LnBheUNhc2gpICsKICAgICAgICAgICAgICAgIHBhcnNlSW50KHRoaXMucG10LnBtdF9hbXQucGF5TGluUGF5KSArCiAgICAgICAgICAgICAgICBwYXJzZUludCh0aGlzLnBtdC5wbXRfYW10LnBheU5ldEJhbmspICsKICAgICAgICAgICAgICAgIHBhcnNlSW50KHRoaXMucG10LnBtdF9hbXQucGF5Q1RDYXJkKSArCiAgICAgICAgICAgICAgICBwYXJzZUludCh0aGlzLnBtdC5wbXRfYW10LnBheUdvdlRpayk7CgogICAgICAgICAgICB0aGlzLnBtdC5wbXRfYW10LnJlYWxfZ2V0ID0gcjsKCiAgICAgICAgICAgIHRoaXMuQ05UbmVlZF9wbXQoKTsKICAgICAgICB9LAoKICAgICAgICBDTlRwbHlfYW10KCkgewogICAgICAgICAgICBsZXQgbjEgPSAwOwogICAgICAgICAgICBsZXQgbjIgPSAwOwogICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICAocGFyc2VJbnQodGhpcy5wbXQuZHRsXzEucGx5X2FtdCkgIT09IG51bGwpIHwKICAgICAgICAgICAgICAgIChwYXJzZUludCh0aGlzLnBtdC5kdGxfMS5wbHlfYW10KSAhPT0gTmFOKQogICAgICAgICAgICApIHsKICAgICAgICAgICAgICAgIG4xID0gcGFyc2VJbnQodGhpcy5wbXQuZHRsXzEucGx5X2FtdCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKAogICAgICAgICAgICAgICAgKHBhcnNlSW50KHRoaXMucG10LmR0bF8yLnBseV9hbXQpICE9PSBudWxsKSB8CiAgICAgICAgICAgICAgICAocGFyc2VJbnQodGhpcy5wbXQuZHRsXzIucGx5X2FtdCkgIT09IE5hTikKICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgICBuMiA9IHBhcnNlSW50KHRoaXMucG10LmR0bF8yLnBseV9hbXQpOwogICAgICAgICAgICB9CgogICAgICAgICAgICB0aGlzLnBtdC5wbHlfYW10ID0gbjEgKyBuMjsKICAgICAgICB9LAoKICAgICAgICBtZGZfc2hvb3RQb3MoaWR4KSB7fSwKCiAgICAgICAgc2F2ZVBtdDIoKSB7CiAgICAgICAgICAgIGxldCByYW5kb21JZCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDApICsgIkEiICsgRGF0ZS5ub3coKTsKICAgICAgICAgICAgdmFyIGRhdGEgPSB7CiAgICAgICAgICAgICAgICBuYW1lOiB0aGlzLnBtdC5uYW1lLAogICAgICAgICAgICAgICAgcGhvbmU6IHRoaXMucG10LnBob25lLAogICAgICAgICAgICAgICAgLy8gcmVhbF9nZXQgICAgICA6IHBhcnNlSW50KHRoaXMucG10LnJlYWxfZ2V0KSwKICAgICAgICAgICAgICAgIC8vIG5lZWRfZ2V0ICAgICAgOiBwYXJzZUludCh0aGlzLnBtdC5uZWVkX2dldCksCiAgICAgICAgICAgICAgICAvLyBwYXlDVENhcmQgICAgIDogcGFyc2VJbnQodGhpcy5wbXQucGF5Q1RDYXJkKSwKICAgICAgICAgICAgICAgIC8vIHBheUNhc2ggICAgICAgOiBwYXJzZUludCh0aGlzLnBtdC5wYXlDYXNoKSwKICAgICAgICAgICAgICAgIC8vIHBheUxpblBheSAgICAgOiBwYXJzZUludCh0aGlzLnBtdC5wYXlMaW5QYXkpLAogICAgICAgICAgICAgICAgLy8gcGF5R292VGlrICAgICA6IHBhcnNlSW50KHRoaXMucG10LnBheUdvdlRpayksCgogICAgICAgICAgICAgICAgcGRfbmFtZTogdGhpcy5wbXQuZHRsXzEucGRfbmFtZSwKICAgICAgICAgICAgICAgIHBseV9hbXQ6IHRoaXMucG10LmR0bF8xLnBseV9hbXQsCgogICAgICAgICAgICAgICAgLy8gc2hvb3RQb3NfZHRsICAgOnRoaXMucG10LnNob290UG9zX2R0bCwKICAgICAgICAgICAgfTsKCiAgICAgICAgICAgIFBtdERhdGFTZXJ2aWNlLnNldHV1SUQocmFuZG9tSWQudG9TdHJpbmcoKSwgZGF0YSkKICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHsKICAgICAgICAgICAgICAgICAgICB0aGlzLm1lc3NhZ2UgPSAi5oiQ5Yqf57SA6YyE77yM5pS26LK76LOH5paZIjsKICAgICAgICAgICAgICAgICAgICB0aGlzLlRtcEFyeV9yYW5kb21JZC5wdXNoKHJhbmRvbUlkLnRvU3RyaW5nKCkpOwogICAgICAgICAgICAgICAgICAgIHRoaXMuc3RlcF9pZHhfbm93ID0yOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC5jYXRjaCgoZSkgPT4gewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgICAgICAgICAgICAgIHRoaXMubWVzc2FnZSA9ICLmlLbosrvmnKrmiJDlip8uLuiri+WGjeippuS4gOasoSI7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICB9LAoKICAgICAgICAvLyAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtCiAgICAgICAgdXBkYXRlVHV0b3JpYWwoKSB7CiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSB7CiAgICAgICAgICAgICAgICBzbm9faWQ6IHRoaXMuY3VycmVudFR1dG9yaWFsLnNub19pZHgsCiAgICAgICAgICAgICAgICBwb3M6IHRoaXMuY3VycmVudFR1dG9yaWFsLnBvcywKICAgICAgICAgICAgICAgIHNubzogdGhpcy5jdXJyZW50VHV0b3JpYWwuc25vLAogICAgICAgICAgICAgICAgc25vX2lkeDogdGhpcy5jdXJyZW50VHV0b3JpYWwuc25vX2lkeCwKCiAgICAgICAgICAgICAgICB0bXBfaWR4OiB0aGlzLmN1cnJlbnRUdXRvcmlhbC50bXBfaWR4LAogICAgICAgICAgICAgICAgbGVmdF90aW1lOiB0aGlzLmN1cnJlbnRUdXRvcmlhbC5sZWZ0X3RpbWUsCiAgICAgICAgICAgICAgICBtZW1vOiB0aGlzLmN1cnJlbnRUdXRvcmlhbC5tZW1vLAoKICAgICAgICAgICAgICAgIGFtdDogdGhpcy5jdXJyZW50VHV0b3JpYWwuYW10LAogICAgICAgICAgICAgICAgcGF5bXQ6IHRoaXMuY3VycmVudFR1dG9yaWFsLnBheW10LAogICAgICAgICAgICAgICAgcGx5X3N0YXR1OiB0aGlzLmN1cnJlbnRUdXRvcmlhbC5wbHlfc3RhdHUsCgogICAgICAgICAgICAgICAgcGx5X3R5cGU6IHRoaXMuY3VycmVudFR1dG9yaWFsLnBseV90eXBlLAogICAgICAgICAgICB9OwoKICAgICAgICAgICAgVHV0b3JpYWxEYXRhU2VydmljZS51cGRhdGUodGhpcy5jdXJyZW50VHV0b3JpYWwua2V5LCBkYXRhKQogICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4gewogICAgICAgICAgICAgICAgICAgIHRoaXMubWVzc2FnZSA9ICLmm7TmlrDos4fmlpnvvIzkuIrlgrPmiJDlip8hIjsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAuY2F0Y2goKGUpID0+IHsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgIH0sCgogICAgICAgIHBhc3NfcGF5Y2xhc3NfYnlyYWdpYyhwZF9pZF9yZ2MsIHBkX2FjbnQsIHBkX25hbWUpIHt9LAoKICAgICAgICB0cmFuc19wYXljbGFzc19ieXJhZ2ljKGN0eCkgewogICAgICAgICAgICB0aGlzLnBheW5vdGVfc25vID0gY3R4OwogICAgICAgIH0sCiAgICAgICAgdHJhbnNfcG10a2V5XzJhcnkoY3R4KXsKICAgICAgICAgICAgdGhpcy5UbXBBcnlfcmFuZG9tSWQucHVzaChjdHgpCiAgICAgICAgfSwKCiAgICAgICAgbGVmdF9NZGYoZGV0YWwpIHsKICAgICAgICAgICAgdmFyIHN0ckFyeSA9IHRoaXMuY3VycmVudFR1dG9yaWFsLmxlZnRfdGltZS5zcGxpdCgiOiIpOwogICAgICAgICAgICBpZiAoZGV0YWwgPT0gMSkgewogICAgICAgICAgICAgICAgaWYgKHBhcnNlSW50KHN0ckFyeVsxXSkgPj0gMzApIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRUdXRvcmlhbC5sZWZ0X3RpbWUgPQogICAgICAgICAgICAgICAgICAgICAgICBwYXJzZUludChzdHJBcnlbMF0pICsgMSArICI6IiArIChwYXJzZUludChzdHJBcnlbMV0pIC0gMzApOwogICAgICAgICAgICAgICAgfSBlbHNlIGlmIChwYXJzZUludChzdHJBcnlbMV0pIDwgMzApIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRUdXRvcmlhbC5sZWZ0X3RpbWUgPQogICAgICAgICAgICAgICAgICAgICAgICBzdHJBcnlbMF0gKyAiOiIgKyAocGFyc2VJbnQoc3RyQXJ5WzFdKSArIDMwKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIGlmIChkZXRhbCA9PSAyKSB7CiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRUdXRvcmlhbC5sZWZ0X3RpbWUgPQogICAgICAgICAgICAgICAgICAgIHBhcnNlSW50KHN0ckFyeVswXSkgKyAxICsgIjoiICsgc3RyQXJ5WzFdOwogICAgICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgbnVtTWRmKGlkeCkgewogICAgICAgICAgICBpZiAoaWR4ID09IDEpIHsKICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudFR1dG9yaWFsLnRtcF9pZHgrKzsKICAgICAgICAgICAgfSBlbHNlIGlmIChpZHggPT0gMikgewogICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50VHV0b3JpYWwudG1wX2lkeC0tOwogICAgICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgcmVzZXRUdXRvcmlhbCgpIHsKICAgICAgICAgICAgdGhpcy5jdXJyZW50VHV0b3JpYWwudG1wX2lkeCA9ICIiOwogICAgICAgICAgICB0aGlzLmN1cnJlbnRUdXRvcmlhbC5sZWZ0X3RpbWUgPSAiIjsKICAgICAgICAgICAgdGhpcy5jdXJyZW50VHV0b3JpYWwubWVtbyA9ICIiOwoKICAgICAgICAgICAgdGhpcy5jdXJyZW50VHV0b3JpYWwucGx5X3N0YXR1ID0gIiI7CiAgICAgICAgICAgIC8vIHRoaXMuY3VycmVudFR1dG9yaWFsLnBseV90eXBlID0gIiI7CiAgICAgICAgICAgIC8vIHRoaXMuY3VycmVudFR1dG9yaWFsLnBseV90eXBlID0gIiI7CgogICAgICAgICAgICB0aGlzLmN1cnJlbnRUdXRvcmlhbC5wYXltdCA9ICIiOwogICAgICAgICAgICB0aGlzLmN1cnJlbnRUdXRvcmlhbC5hbXQgPSAiIjsKCiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSB7CiAgICAgICAgICAgICAgICB0bXBfaWR4OiAiIiwKICAgICAgICAgICAgICAgIGxlZnRfdGltZTogIiIsCiAgICAgICAgICAgICAgICBtZW1vOiAiIiwKCiAgICAgICAgICAgICAgICBwbHlfc3RhdHU6ICIiLAogICAgICAgICAgICAgICAgcGx5X3R5cGU6IiIsCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGFtdDogIiIsCiAgICAgICAgICAgICAgICBwYXltdDogIiIsCiAgICAgICAgICAgIH07CgogICAgICAgICAgICBUdXRvcmlhbERhdGFTZXJ2aWNlLnVwZGF0ZSh0aGlzLmN1cnJlbnRUdXRvcmlhbC5rZXksIGRhdGEpCiAgICAgICAgICAgICAgICAudGhlbigoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5tZXNzYWdlID0gIuizh+aWme+8jOa4hemZpOaIkOWKnyAhIjsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAuY2F0Y2goKGUpID0+IHsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgIH0sCgogICAgICAgIHVwZGF0ZVNob29vdFBvcyhzdGF0dSkgeyAKICAgICAgICAgIAogICAgICAgICAgdmFyIGFyeSA9IHRoaXMucG10LnNob290UG9zX2R0bDsKICAgICAgICAgIHZhciBkYXRhID0gW10KICAgICAgICAgICAgaWYoc3RhdHUgPT0gMSApCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgLy8g6Z225L2NLOWhq+WFpeWWruiZnwogICAgICAgICAgICAgICAgICBmb3IgKHZhciBuID0gMDsgbiA8IGFyeS5sZW5ndGg7IG4rKykgeyAgCiAgICAgICAgICAgICAgICAgIGRhdGEgPSB7IAogICAgICAgICAgICAgICAgICAgICAgICBtZW1vOiB0aGlzLlRtcEFyeV9yYW5kb21JZFt0aGlzLlRtcEFyeV9yYW5kb21JZC5sZW5ndGggLSAxXSwgICAKICAgICAgICAgICAgICAgICAgICB9OyAKICAgICAgICAgICAgICAgICAgICBUdXRvcmlhbERhdGFTZXJ2aWNlLnVwZGF0ZShhcnlbbl0sIGRhdGEpCiAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubWVzc2FnZSA9ICLmm7TmlrDos4fmlpnvvIzkuIrlgrPmiJDlip8hIjsKICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgLmNhdGNoKChlKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB0aGlzLnN0ZXBfaWR4X25vdyA9MzsKICAgICAgICAgICAgICAgIHRoaXMuQmtpbmdfc2hvb3RQb3MgPSBmYWxzZTsgLy8vIOmXnOmWiSDlt7LlhLLlrZjlhaflrrkKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIGlmIChzdGF0dSA9PSAyKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIC8vIOmdtuS9jSzloavlhaXmtYHmsLTomZ8KICAgICAgICAgICAgICAgICAgZm9yICh2YXIgTSA9IDA7IE0gPCBhcnkubGVuZ3RoOyBNKyspIHsgIAogICAgICAgICAgICAgICAgICBkYXRhID0geyAKICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICB0bXBfaWR4OiB0aGlzLlRtcEFyeV90bXBfaWR4W01dLCAgCiAgICAgICAgICAgICAgICAgICAgICAgIHBseV90eXBlOiB0aGlzLlRtcEFyeV9wbHlfdHlwZVtNXSwgCiAgICAgICAgICAgICAgICAgICAgICAgIHBseV9zdGF0dTogdGhpcy5UbXBBcnlfcGx5X3N0YXR1W01dLCAgCiAgICAgICAgICAgICAgICAgICAgfTsgIAogICAgICAgICAgICAgICAgICAgIFR1dG9yaWFsRGF0YVNlcnZpY2UudXBkYXRlKGFyeVtNXSwgZGF0YSkKICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tZXNzYWdlID0gIuabtOaWsOizh+aWme+8jOS4iuWCs+aIkOWKnyEiOwogICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICAuY2F0Y2goKGUpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHRoaXMuc3RlcF9pZHhfbm93ID00OwogICAgICAgICAgICAgICAgdGhpcy5Ca2luZ19UbXBfaWR4PWZhbHNlOyAKICAgICAgICAgICAgfSAKCiAgICAgICAgICAgIC8vIGZvciAodmFyIG4gPSAwOyBuIDwgYXJ5Lmxlbmd0aDsgbisrKSB7IAoKICAgICAgICAgICAgLy8gICBkYXRhID0geyAKICAgICAgICAgICAgLy8gICAgICAgICB0bXBfaWR4OiB0aGlzLlRtcEFyeV90bXBfaWR4W3RoaXMuVG1wQXJ5X3RtcF9pZHgubGVuZ3RoIC0gMV0sICAKICAgICAgICAgICAgLy8gICAgICAgICBwbHlfdHlwZTogdGhpcy5UbXBBcnlfcGx5X3R5cGVbdGhpcy5UbXBBcnlfdG1wX3R5cGUubGVuZ3RoIC0gMV0sIAogICAgICAgICAgICAvLyAgICAgICAgIHBseV9zdGF0dTogdGhpcy5UbXBBcnlfcGx5X3N0YXR1W3RoaXMuVG1wQXJ5X3RtcF9zdGF0dS5sZW5ndGggLSAxXSwgIAogICAgICAgICAgICAvLyAgICAgfTsgCgogICAgICAgICAgICAvLyAgICAgVHV0b3JpYWxEYXRhU2VydmljZS51cGRhdGUoYXJ5W25dLCBkYXRhKQogICAgICAgICAgICAvLyAgICAgICAgIC50aGVuKCgpID0+IHsKICAgICAgICAgICAgLy8gICAgICAgICAgICAgdGhpcy5tZXNzYWdlID0gIuabtOaWsOizh+aWme+8jOS4iuWCs+aIkOWKnyEiOwogICAgICAgICAgICAvLyAgICAgICAgIH0pCiAgICAgICAgICAgIC8vICAgICAgICAgLmNhdGNoKChlKSA9PiB7CiAgICAgICAgICAgIC8vICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgICAgICAvLyAgICAgICAgIH0pOwogICAgICAgICAgICAvLyB9CiAgICAgICAgfSwKICAgICAgICBkZWxldGVUdXRvcmlhbCgpIHsKICAgICAgICAgICAgVHV0b3JpYWxEYXRhU2VydmljZS5kZWxldGUodGhpcy5jdXJyZW50VHV0b3JpYWwua2V5KQogICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4gewogICAgICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoInJlZnJlc2hMaXN0Iik7CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgLmNhdGNoKChlKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIHJlbW92ZUFsbFR1dG9yaWFscygpIHsKICAgICAgICAgICAgVHV0b3JpYWxEYXRhU2VydmljZS5kZWxldGVBbGwoKQogICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4gewogICAgICAgICAgICAgICAgICAgIHRoaXMucmVmcmVzaExpc3QoKTsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAuY2F0Y2goKGUpID0+IHsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgY2hrX2xlZnRUaW1lKCkgewogICAgICAgICAgICB2YXIgciA9IDA7CiAgICAgICAgICAgIGxldCBrID0gdGhpcy5kYXlqcyhEYXRlLm5vdygpKS5mb3JtYXQoIkhIIik7CiAgICAgICAgICAgIGlmIChrIDw9IDEyKSB7CiAgICAgICAgICAgICAgICByID0gMTsKICAgICAgICAgICAgfSBlbHNlIGlmIChrID4gMTAgJiYgayA8PSAxOCkgewogICAgICAgICAgICAgICAgciA9IDI7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoayA+IDE2ICYmIGsgPD0gMjUpIHsKICAgICAgICAgICAgICAgIHIgPSAzOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiByOwogICAgICAgIH0sIAogICAgICAgIC8vIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtCiAgICAgICAgdXBkYXRlQ3VycmVudFRpbWUoKSB7CiAgICAgICAgICAgIHRoaXMuY1QgPSBEYXRlLm5vdygpOwogICAgICAgIH0sCgogICAgICAgIG9uRGF0YUNoYW5nZShpdGVtcykgewogICAgICAgICAgICBsZXQgX3R1dG9yaWFscyA9IFtdOwogICAgICAgICAgICBpdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7CiAgICAgICAgICAgICAgICBsZXQga2V5ID0gaXRlbS5rZXk7CiAgICAgICAgICAgICAgICBsZXQgZGF0YSA9IGl0ZW0udmFsKCk7CiAgICAgICAgICAgICAgICBfdHV0b3JpYWxzLnB1c2goewogICAgICAgICAgICAgICAgICAgIGtleToga2V5LAogICAgICAgICAgICAgICAgICAgIHBvczogZGF0YS5wb3MsCiAgICAgICAgICAgICAgICAgICAgc25vOiBkYXRhLnNubywKICAgICAgICAgICAgICAgICAgICBzbm9faWR4OiBkYXRhLnNub19pZHgsCiAgICAgICAgICAgICAgICAgICAgc25vX2lkOiBkYXRhLnNub19pZCwKCiAgICAgICAgICAgICAgICAgICAgdG1wX2lkeDogZGF0YS50bXBfaWR4LAogICAgICAgICAgICAgICAgICAgIGxlZnRfdGltZTogZGF0YS5sZWZ0X3RpbWUsCiAgICAgICAgICAgICAgICAgICAgbWVtbzogZGF0YS5tZW1vLAoKICAgICAgICAgICAgICAgICAgICBwbGF5ZXJfZ3JvdXA6IGRhdGEucGxheWVyX2dyb3VwLAogICAgICAgICAgICAgICAgICAgIGFtdDogZGF0YS5hbXQsCiAgICAgICAgICAgICAgICAgICAgcGF5bXQ6IGRhdGEucGF5bXQsCgogICAgICAgICAgICAgICAgICAgIHBseV9zbHRlZDogZGF0YS5wbHlfc2x0ZWQsCiAgICAgICAgICAgICAgICAgICAgcGx5X3R5cGU6IGRhdGEucGx5X3R5cGUsIAogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgdGhpcy50dXRvcmlhbHMgPSBfdHV0b3JpYWxzOwogICAgICAgIH0sCgogICAgICAgIHBtdF9vbkRhdGFDaGFuZ2UoaXRlbXMpIHsKCiAgICAgICAgICAgIGxldCBfdGFuc0NBVE0gPSBbXTsKICAgICAgICAgICAgaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4gewogICAgICAgICAgICAgICAgbGV0IGtleSA9IGl0ZW0ua2V5OwogICAgICAgICAgICAgICAgbGV0IGRhdGEgPSBpdGVtLnZhbCgpOwogICAgICAgICAgICAgICAgX3RhbnNDQVRNLnB1c2goewoKICAgICAgICAgICAgICAgICAgICBrZXk6IGtleSwKICAgICAgICAgICAgICAgICAgICBuYW1lOiBkYXRhLm5hbWUsIAogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgdGhpcy5wbXRMaXN0cyA9IF90YW5zQ0FUTTsKICAgICAgICB9LAoKICAgICAgIAogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgVHV0b3JpYWxEYXRhU2VydmljZS5nZXRBbGwoKS5vbigidmFsdWUiLCB0aGlzLm9uRGF0YUNoYW5nZSk7CgogICAgICAgIFBtdERhdGFTZXJ2aWNlLmdldEFsbCgpLm9uKCJ2YWx1ZSIsIHRoaXMucG10X29uRGF0YUNoYW5nZSk7CgogICAgICAgIHRoaXMubWVzc2FnZSA9ICIiOwogICAgICAgIHRoaXMuY3VycmVudFR1dG9yaWFsID0geyAuLi50aGlzLnR1dG9yaWFsIH07CiAgICAgICAgLy8gdGhpcy5nZXRGaWxlX25hbWUoKTsKICAgIH0sCn07Cg=="},null]}