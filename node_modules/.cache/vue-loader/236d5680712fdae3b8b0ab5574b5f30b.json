{"remainingRequest":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/src/components/bdadd7_List.vue?vue&type=template&id=27511836&","dependencies":[{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/src/components/bdadd7_List.vue","mtime":1657434777639},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9IiBmbGV4IGp1c3RpZnktY2VudGVyICAiPgoKICAgIDxkaXYgY2xhc3M9InctMy8xMiBtbC00ICBoLXNjcmVlbiAiPgoKICAgICAgICA8ZGl2IGNsYXNzPSIganVzdGlmeS1jZW50ZXIgdy1mdWxsICI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im14LTEiPgogICAgICAgICAgICAgICAgPHYtb3ZlcmxheSA6dmFsdWU9Im92ZXJsYXkiIDpvcGFjaXR5PSJvcGMiIGNsYXNzPSJoLWF1dG8iPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdyaWQgZ3JpZC1jb2xzLTUgZ2FwLTAgcHQtMTAiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc3Bhbi01IHBsLTUiPgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc3Bhbi0zIHBsLTUiPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LWJsdWUtNTAwIGJnLXdoaXRlIHB4LTQgcC0zIG0tMyByb3VuZGVkLWZ1bGwgdGV4dC0zeGwgZm9udC1ibGFjayIgdi1pZj0iY3VycmVudFR1dG9yaWFsICE9PSBudWxsICI+5bCHIHt7Y3VycmVudFR1dG9yaWFsLnNubyB9fS17e2N1cnJlbnRUdXRvcmlhbC5zbm9faWR4IH19IOabv+aPm+iHsyA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LXNob3c9ImNvcHlNb3JlID09IGZhbHNlIiBjbGFzcz0idGV4dC1yZWQtNTAwIGJnLXdoaXRlIHB4LTQgcC0zIG0tMyByb3VuZGVkLWZ1bGwgdGV4dC0zeGwgZm9udC1ibGFjayI+e3t0b0hlcmUuc25vfX0te3t0b0hlcmUuc25vX2lkeH19PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDpgJnpgormmK/lhajpg6h7eyB0b0hlcmVfbW9yZSB9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOesrOS4gOaJueasoSB7eyB0b0hlcmVfbW9yZTEyIH19IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOesrOS6jOaJueasoSB7eyB0b0hlcmVfbW9yZTM0IH19IC0tPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zcGFuLTIgZmxleCI+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hlY2tib3ggY2xhc3M9Im14LTUgcHktNiIgdi1tb2RlbD0iY29weU1vcmUiIDpsYWJlbD0iYOenu+WLlS7lpJrpnbbkvY1gIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGVja2JveD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biBjb2xvcj0iI0QzMkYyRiIgQGNsaWNrPSJjbGVhcl9jaGdQb3MoKSIgY2xhc3M9Im0tMSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg5Y+W5raICiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtYnRuPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biB2LXNob3c9ImNvcHlNb3JlID09IGZhbHNlIiBjb2xvcj0iIzE5NzZEMiIgZGFyayBAY2xpY2s9ImNoYW5nUG9zKHRvSGVyZS5rZXkpIiBjbGFzcz0ibS0xIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDpgIHlh7oKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1idG4+CgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biB2LXNob3c9ImNvcHlNb3JlID09IHRydWUgJiYgIHByZUNDID09IGZhbHNlIiBjb2xvcj0iIzE2YTM0YSIgZGFyayBAY2xpY2s9InByZV9CZUNsZWFyKCkiIGNsYXNzPSJtLTEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOa4heeQhiAu56e75YuV6Z225L2NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtYnRuPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biB2LXNob3c9InByZUNDID09IHRydWUgIiBjb2xvcj0iIzRmNDZlNSIgZGFyayBAY2xpY2s9ImNoYW5nUG9zX21vcmUoKSIgY2xhc3M9Im0tMSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg5L+u5pS5IC7lpJrpnbbkvY0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1idG4+CgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNwYW4tNSAgZmxleCAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idy0xLzUgYmctZ3JlZW4tNjAwIHJvdW5kZWQteGwgcHktMyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1sLTE2IiB2LXNob3c9ImNvcHlNb3JlID09IGZhbHNlIj4g5L2/55So5Lit55qE6Z225L2NIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibWwtMTYiIHYtc2hvdz0iY29weU1vcmUgPT0gdHJ1ZSI+IOatpempnygxKS7lhYjmuIXnkIbpnbbkvY0gPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAtZ3JvdXAgY29sdW1uIG11bHRpcGxlIHYtbW9kZWw9ImJlQ2xlYXIiIGNsYXNzPSJteC0xMCAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGFjdGl2ZS1jbGFzcz0iYmctYmx1ZS04MDAgICB0ZXh0LXdoaXRlIHRleHQteCIgdi1mb3I9Iih0dXRvcmlhbCwgaW5kZXgpIGluIHR1dG9yaWFscyIgdi1pZj0idHV0b3JpYWwucGx5X3N0YXR1ICE9ICcnIHwgdHV0b3JpYWwubGVmdF90aW1lICE9ICcnIiA6a2V5PSJpbmRleCIgOnZhbHVlPSJ0dXRvcmlhbCIgOmNvbG9yPSJyZWQiIGZpbHRlcj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7IHR1dG9yaWFsLnNubyB9fS17e3R1dG9yaWFsLnNub19pZHggfX3vvIx7e3R1dG9yaWFsLmxlZnRfdGltZSB9fSDpm6IKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNoaXAtZ3JvdXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3LTQvNSI+CgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtc2hvdz0iY29weU1vcmUgPT0gZmFsc2UiIGNsYXNzPSJiZy1yZWQtNDAwIHJvdW5kZWQteGwgcHgtNSBweS0zIj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSIgbWwtMTYiPiDpgJnlhZLnqbrokZflkaLvvIEgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwLWdyb3VwIGNvbHVtbiB2LW1vZGVsPSJ0b0hlcmUiIGNsYXNzPSJteC0xMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGFjdGl2ZS1jbGFzcz0iYmctZ3JlZW4tODAwIHRleHQtd2hpdGUgdGV4dC14IiB2LWZvcj0iKHR1dG9yaWFsLCBpbmRleCkgaW4gdHV0b3JpYWxzIiA6a2V5PSJpbmRleCIgOnZhbHVlPSJ0dXRvcmlhbCIgdi1pZj0idHV0b3JpYWwucGx5X3N0YXR1ID09ICcnICYmICB0dXRvcmlhbC5sZWZ0X3RpbWUgPT0gJyciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7IHR1dG9yaWFsLnNubyB9fS17e3R1dG9yaWFsLnNub19pZHggfX3vvIx7e3R1dG9yaWFsLmxlZnRfdGltZSB9fSDpm6IKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtY2hpcC1ncm91cD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYmcteWVsbG93LTQwMCByb3VuZGVkLXhsIHB4LTUgcHktMyIgdi1zaG93PSJjb3B5TW9yZSA9PSB0cnVlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1sLTE2IHRleHQtZ3JheS05MDAgIj4g5q2l6amfKDIpLumBuOaThyDlpJrlgIvmm7Tmj5vnmoTpnbbkvY3vvIzmjqXokZfmjInkuIvntqDoibLmjInpiJXjgIIgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmbGV4IHctZnVsbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3LTEvMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcC1ncm91cCB2LW1vZGVsPSJ0b0hlcmVfbW9yZTEyIiBjbGFzcz0iIiBjb2x1bW4gbXVsdGlwbGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgc21hbGwgYWN0aXZlLWNsYXNzPSJiZy1ibHVlLTgwMCAgIHRleHQtd2hpdGUgdGV4dC14IiB2LWZvcj0iKHR1dG9yaWFsLCBpbmRleCkgaW4gdHV0b3JpYWxzIiA6a2V5PSJpbmRleCIgOnZhbHVlPSJ0dXRvcmlhbCIgdi1pZj0idHV0b3JpYWwuc25vID09IDEgfCB0dXRvcmlhbC5zbm8gPT0gMiAmJiB0dXRvcmlhbC5sZWZ0X3RpbWUgPT0gJycgIj4ge3sgdHV0b3JpYWwuc25vIH19LXt7IHR1dG9yaWFsLnNub19pZHggfX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNoaXAtZ3JvdXA+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAtZ3JvdXAgdi1tb2RlbD0idG9IZXJlX21vcmUzNCIgY2xhc3M9IiIgY29sdW1uIG11bHRpcGxlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIHNtYWxsIGFjdGl2ZS1jbGFzcz0iYmctYmx1ZS04MDAgICB0ZXh0LXdoaXRlIHRleHQteCIgdi1mb3I9Iih0dXRvcmlhbCwgaW5kZXgpIGluIHR1dG9yaWFscyIgOmtleT0iaW5kZXgiIDp2YWx1ZT0idHV0b3JpYWwiIHYtaWY9InR1dG9yaWFsLnNubyA9PSAzIHwgdHV0b3JpYWwuc25vID09IDQgJiYgdHV0b3JpYWwubGVmdF90aW1lID09ICcnICI+IHt7IHR1dG9yaWFsLnNubyB9fS17eyB0dXRvcmlhbC5zbm9faWR4IH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwLWdyb3VwPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwLWdyb3VwIHYtbW9kZWw9InRvSGVyZV9tb3JlNTYiIGNsYXNzPSIgIiBjb2x1bW4gbXVsdGlwbGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgc21hbGwgYWN0aXZlLWNsYXNzPSJiZy1ibHVlLTgwMCAgIHRleHQtd2hpdGUgdGV4dC14IiB2LWZvcj0iKHR1dG9yaWFsLCBpbmRleCkgaW4gdHV0b3JpYWxzIiA6a2V5PSJpbmRleCIgOnZhbHVlPSJ0dXRvcmlhbCIgdi1pZj0idHV0b3JpYWwuc25vID09IDUgfCB0dXRvcmlhbC5zbm8gPT0gNiAmJiB0dXRvcmlhbC5sZWZ0X3RpbWUgPT0gJycgIj4ge3sgdHV0b3JpYWwuc25vIH19LXt7IHR1dG9yaWFsLnNub19pZHggfX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNoaXAtZ3JvdXA+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAtZ3JvdXAgdi1tb2RlbD0idG9IZXJlX21vcmU3OCIgY2xhc3M9IiAiIGNvbHVtbiBtdWx0aXBsZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBzbWFsbCBhY3RpdmUtY2xhc3M9ImJnLWJsdWUtODAwICAgdGV4dC13aGl0ZSB0ZXh0LXgiIHYtZm9yPSIodHV0b3JpYWwsIGluZGV4KSBpbiB0dXRvcmlhbHMiIDprZXk9ImluZGV4IiA6dmFsdWU9InR1dG9yaWFsIiB2LWlmPSJ0dXRvcmlhbC5zbm8gPT0gNyB8IHR1dG9yaWFsLnNubyA9PSA4ICYmIHR1dG9yaWFsLmxlZnRfdGltZSA9PSAnJyAiPiB7eyB0dXRvcmlhbC5zbm8gfX0te3sgdHV0b3JpYWwuc25vX2lkeCB9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtY2hpcC1ncm91cD4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcC1ncm91cCB2LW1vZGVsPSJ0b0hlcmVfbW9yZTkxMCIgY2xhc3M9IiAiIGNvbHVtbiBtdWx0aXBsZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBzbWFsbCBhY3RpdmUtY2xhc3M9ImJnLWJsdWUtODAwICAgdGV4dC13aGl0ZSB0ZXh0LXgiIHYtZm9yPSIodHV0b3JpYWwsIGluZGV4KSBpbiB0dXRvcmlhbHMiIDprZXk9ImluZGV4IiA6dmFsdWU9InR1dG9yaWFsIiB2LWlmPSJ0dXRvcmlhbC5zbm8gPT0gOSB8IHR1dG9yaWFsLnNubyA9PSAxMCAmJiB0dXRvcmlhbC5sZWZ0X3RpbWUgPT0gJycgICI+IHt7IHR1dG9yaWFsLnNubyB9fS17eyB0dXRvcmlhbC5zbm9faWR4IH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwLWdyb3VwPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwLWdyb3VwIHYtbW9kZWw9InRvSGVyZV9tb3JlMTEiIGNsYXNzPSIgIiBjb2x1bW4gbXVsdGlwbGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgc21hbGwgYWN0aXZlLWNsYXNzPSJiZy1ibHVlLTgwMCAgIHRleHQtd2hpdGUgdGV4dC14IiB2LWZvcj0iKHR1dG9yaWFsLCBpbmRleCkgaW4gdHV0b3JpYWxzIiA6a2V5PSJpbmRleCIgOnZhbHVlPSJ0dXRvcmlhbCIgdi1pZj0idHV0b3JpYWwuc25vID09IDExICYmIHR1dG9yaWFsLmxlZnRfdGltZSA9PSAnJyAiPiB7eyB0dXRvcmlhbC5zbm8gfX0te3sgdHV0b3JpYWwuc25vX2lkeCB9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtY2hpcC1ncm91cD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InctMS8yIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwLWdyb3VwIHYtbW9kZWw9InRvSGVyZV9tb3JlMTIxMyIgY2xhc3M9IiAiIGNvbHVtbiBtdWx0aXBsZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBzbWFsbCBhY3RpdmUtY2xhc3M9ImJnLWJsdWUtODAwICAgdGV4dC13aGl0ZSB0ZXh0LXgiIHYtZm9yPSIodHV0b3JpYWwsIGluZGV4KSBpbiB0dXRvcmlhbHMiIDprZXk9ImluZGV4IiA6dmFsdWU9InR1dG9yaWFsIiB2LWlmPSJ0dXRvcmlhbC5zbm8gPT0gMTIgfCB0dXRvcmlhbC5zbm8gPT0gMTMgJiYgdHV0b3JpYWwubGVmdF90aW1lID09ICcnICI+IHt7IHR1dG9yaWFsLnNubyB9fS17eyB0dXRvcmlhbC5zbm9faWR4IH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwLWdyb3VwPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwLWdyb3VwIHYtbW9kZWw9InRvSGVyZV9tb3JlMTQxNSIgY2xhc3M9IiAiIGNvbHVtbiBtdWx0aXBsZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBzbWFsbCBhY3RpdmUtY2xhc3M9ImJnLWJsdWUtODAwICAgdGV4dC13aGl0ZSB0ZXh0LXgiIHYtZm9yPSIodHV0b3JpYWwsIGluZGV4KSBpbiB0dXRvcmlhbHMiIDprZXk9ImluZGV4IiA6dmFsdWU9InR1dG9yaWFsIiB2LWlmPSJ0dXRvcmlhbC5zbm8gPT0gMTUgfCB0dXRvcmlhbC5zbm8gPT0gMTQgJiYgdHV0b3JpYWwubGVmdF90aW1lID09ICcnICI+IHt7IHR1dG9yaWFsLnNubyB9fS17eyB0dXRvcmlhbC5zbm9faWR4IH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwLWdyb3VwPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwLWdyb3VwIHYtbW9kZWw9InRvSGVyZV9tb3JlMTcxNiIgY2xhc3M9IiAiIGNvbHVtbiBtdWx0aXBsZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBzbWFsbCBhY3RpdmUtY2xhc3M9ImJnLWJsdWUtODAwICAgdGV4dC13aGl0ZSB0ZXh0LXgiIHYtZm9yPSIodHV0b3JpYWwsIGluZGV4KSBpbiB0dXRvcmlhbHMiIDprZXk9ImluZGV4IiA6dmFsdWU9InR1dG9yaWFsIiB2LWlmPSJ0dXRvcmlhbC5zbm8gPT0gMTcgfCB0dXRvcmlhbC5zbm8gPT0gMTYgJiYgdHV0b3JpYWwubGVmdF90aW1lID09ICcnICI+IHt7IHR1dG9yaWFsLnNubyB9fS17eyB0dXRvcmlhbC5zbm9faWR4IH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwLWdyb3VwPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwLWdyb3VwIHYtbW9kZWw9InRvSGVyZV9tb3JlMTkxOCIgY2xhc3M9IiAiIGNvbHVtbiBtdWx0aXBsZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBzbWFsbCBhY3RpdmUtY2xhc3M9ImJnLWJsdWUtODAwICAgdGV4dC13aGl0ZSB0ZXh0LXgiIHYtZm9yPSIodHV0b3JpYWwsIGluZGV4KSBpbiB0dXRvcmlhbHMiIDprZXk9ImluZGV4IiA6dmFsdWU9InR1dG9yaWFsIiB2LWlmPSJ0dXRvcmlhbC5zbm8gPT0gMTkgfCB0dXRvcmlhbC5zbm8gPT0gMTggJiYgdHV0b3JpYWwubGVmdF90aW1lID09ICcnICI+IHt7IHR1dG9yaWFsLnNubyB9fS17eyB0dXRvcmlhbC5zbm9faWR4IH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwLWdyb3VwPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwLWdyb3VwIHYtbW9kZWw9InRvSGVyZV9tb3JlMjAyMSIgY2xhc3M9IiAiIGNvbHVtbiBtdWx0aXBsZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBzbWFsbCBhY3RpdmUtY2xhc3M9ImJnLWJsdWUtODAwICAgdGV4dC13aGl0ZSB0ZXh0LXgiIHYtZm9yPSIodHV0b3JpYWwsIGluZGV4KSBpbiB0dXRvcmlhbHMiIDprZXk9ImluZGV4IiA6dmFsdWU9InR1dG9yaWFsIiB2LWlmPSJ0dXRvcmlhbC5zbm8gPT0gMjEgfCB0dXRvcmlhbC5zbm8gPT0gMjAgJiYgdHV0b3JpYWwubGVmdF90aW1lID09ICcnICI+IHt7IHR1dG9yaWFsLnNubyB9fS17eyB0dXRvcmlhbC5zbm9faWR4IH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwLWdyb3VwPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwLWdyb3VwIHYtbW9kZWw9InRvSGVyZV9tb3JlMjIyMyIgY2xhc3M9IiAiIGNvbHVtbiBtdWx0aXBsZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBzbWFsbCBhY3RpdmUtY2xhc3M9ImJnLWJsdWUtODAwICAgdGV4dC13aGl0ZSB0ZXh0LXgiIHYtZm9yPSIodHV0b3JpYWwsIGluZGV4KSBpbiB0dXRvcmlhbHMiIDprZXk9ImluZGV4IiA6dmFsdWU9InR1dG9yaWFsIiB2LWlmPSJ0dXRvcmlhbC5zbm8gPT0gMjIgfCB0dXRvcmlhbC5zbm8gPT0gMjMgJiYgdHV0b3JpYWwubGVmdF90aW1lID09ICcnICI+IHt7IHR1dG9yaWFsLnNubyB9fS17eyB0dXRvcmlhbC5zbm9faWR4IH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwLWdyb3VwPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwLWdyb3VwIHYtbW9kZWw9InRvSGVyZV9tb3JlMjQyNSIgY2xhc3M9IiAiIGNvbHVtbiBtdWx0aXBsZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBzbWFsbCBhY3RpdmUtY2xhc3M9ImJnLWJsdWUtODAwICAgdGV4dC13aGl0ZSB0ZXh0LXgiIHYtZm9yPSIodHV0b3JpYWwsIGluZGV4KSBpbiB0dXRvcmlhbHMiIDprZXk9ImluZGV4IiA6dmFsdWU9InR1dG9yaWFsIiB2LWlmPSJ0dXRvcmlhbC5zbm8gPT0gMjQgfCB0dXRvcmlhbC5zbm8gPT0gMjUgJiYgdHV0b3JpYWwubGVmdF90aW1lID09ICcnICI+IHt7IHR1dG9yaWFsLnNubyB9fS17eyB0dXRvcmlhbC5zbm9faWR4IH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwLWdyb3VwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvdi1vdmVybGF5PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdyaWQgZ3JpZC1jb2xzLTQgZ2FwLTEiPgoKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zcGFuLTUgdGV4dC1ncmF5LTkwMCBiZy1ncmF5LTIwMCByb3VuZGVkLTJ4bCBteS0xIHAtMyB0ZXh0LXhzIj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iIj4g55uu5YmN5LiK57ea5Lq65pW477yaIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8YnI+IOWMlzrppJggPHNwYW4gY2xhc3M9InRleHQtYmFzZSB0ZXh0LWdyYXktOTAwIGZvbnQtYmxhY2siPiAge3sgMzAgLSBjZmdfUG9zXzEgfX0gPC9zcGFuPiDnqbrkvY0sIDxzcGFuIGNsYXNzPSJ0ZXh0LWJhc2UgdGV4dC1ncmF5LTkwMCBmb250LWJsYWNrIj4gIHt7IGNmZ19Qb3NfMSB9fSA8L3NwYW4+IOS9jeS9v+eUqOS4rSwgPHNwYW4gY2xhc3M9InRleHQtYmFzZSB0ZXh0LWdyYXktOTAwIGZvbnQtYmxhY2siPiAge3sgY2ZnX1Bvc18zIH19IDwvc3Bhbj4gICAgICAgICAgICAgICAgICAgIOS9jei2heaZggogICAgICAgICAgICAgICAgICAgIDxicj4g5Y2XOumkmCA8c3BhbiBjbGFzcz0idGV4dC1iYXNlIHRleHQtZ3JheS05MDAgZm9udC1ibGFjayI+ICB7eyAzMCAtIGNmZ19Qb3NfMiB9fSA8L3NwYW4+IOepuuS9jSwgPHNwYW4gY2xhc3M9InRleHQtYmFzZSB0ZXh0LWdyYXktOTAwIGZvbnQtYmxhY2siPiAge3sgY2ZnX1Bvc18yIH19IDwvc3Bhbj4g5L2N5L2/55So5LitLCA8c3BhbiBjbGFzcz0idGV4dC1iYXNlIHRleHQtZ3JheS05MDAgZm9udC1ibGFjayI+ICB7eyBjZmdfUG9zXzQgfX0gPC9zcGFuPiAgICAgICAgICAgICAgICAgICAg5L2N6LaF5pmCCiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc3Bhbi01IGdyaWQgZ3JpZC1jb2xzLTQgZ2FwLTAgYmctZ3JheS0yMDAgcm91bmRlZC1sLTJ4bCBteS0xIHB4LTEiPgoKICAgICAgICAgICAgICAgICAgICA8IS0tIDx2LWNoZWNrYm94IHYtbW9kZWw9ImNvcHlSaWdodF9UIiBjbGFzcz0idGV4dC14cyBjb2wtc3Bhbi0xIiA6bGFiZWw9ImDmibnmrKHoqK3lrppgIj48L3YtY2hlY2tib3g+CiAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCBjbGVhcmFibGUgc29sbyBkZW5zZSB2LW1vZGVsPSJiY2hfbGVmdF90aW1lIiAKICAgICAgICAgICAgICAgICAgICBjbGFzcz0idGV4dC14cyBteS0yIG14LTEgY29sLXNwYW4tMyIgbGFiZWw9Iuiri+ioreWumumbouWgtOaZgumWkyIgcGxhY2Vob2xkZXI9IiI+CiAgICAgICAgICAgICAgICAgICAgPC92LXRleHQtZmllbGQ+IC0tPgoKCiAgICAgICAgICAgICAgICAgICAgPHYtY2hlY2tib3ggdi1tb2RlbD0iY29weVJpZ2h0X04iIGNsYXNzPSJ0ZXh0LXhzIGNvbC1zcGFuLTEiIDpsYWJlbD0iYOaJueasoeioreWummAiPjwvdi1jaGVja2JveD4KICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkIGNsZWFyYWJsZSBzb2xvIGRlbnNlIHYtbW9kZWw9ImJjaF90bXBfaWR4IiBjbGFzcz0idGV4dC14cyBteS0yIG14LTEgY29sLXNwYW4tMyIgbGFiZWw9Iuikh+ijveeJjOiZny8g5YKZ6Ki7IiBwbGFjZWhvbGRlcj0iIj4KICAgICAgICAgICAgICAgICAgICA8L3YtdGV4dC1maWVsZD4KCiAgICAgICAgICAgICAgICAgICAgPCEtLSA8aW5wdXQgY2xhc3M9IiAgYmctd2hpdGUgYXBwZWFyYW5jZS1ub25lIGJvcmRlciByb3VuZGVkIGNvbC1zcGFuLTMgcHktMSBweC0zIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LWdyYXktNzAwIGxlYWRpbmctdGlnaHQgZm9jdXM6b3V0bGluZS1ub25lIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb2N1czpzaGFkb3ctb3V0bGluZSIgdHlwZT0idGV4dCIgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJiY2hfdG1wX2lkeCIgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSLopIfoo73niYzomZ8vIOWCmeiouyI+IC0tPgoKICAgICAgICAgICAgICAgICAgICA8IS0tIDxociBjbGFzcz0iY29sLXNwYW4tNSI+IC0tPgoKICAgICAgICAgICAgICAgICAgICA8di1jaGVja2JveCB2LW1vZGVsPSJjb3B5UmlnaHRfTl9hdXRvIiBjbGFzcz0idGV4dC14cyBjb2wtc3Bhbi0xIiA6bGFiZWw9ImDoh6rli5XpgZ7lop5gIiBAY2hhbmdlPSJjZmcoKSI+CiAgICAgICAgICAgICAgICAgICAgPC92LWNoZWNrYm94PgoKICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkIGNsZWFyYWJsZSBzb2xvIGRlbnNlIHYtbW9kZWw9ImF1dG9fdG1wX2lkeCIgY2xhc3M9InRleHQteHMgbXktMiBteC0xIGNvbC1zcGFuLTEiIGxhYmVsPSLomZ/norwiIHBsYWNlaG9sZGVyPSIiPgogICAgICAgICAgICAgICAgICAgIDwvdi10ZXh0LWZpZWxkPgoKICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkIGNsZWFyYWJsZSBzb2xvIGRlbnNlIHYtc2hvdz0iY29weVJpZ2h0X05fYXV0byA9PSB0cnVlICIgdi1tb2RlbD0iYmNoX2xlZnRfdGltZSIgY2xhc3M9InRleHQteHMgbXktMiBteC0xIGNvbC1zcGFuLTIiIGxhYmVsPSLpm6LloLTmmYLplpMiIHBsYWNlaG9sZGVyPSIiPgogICAgICAgICAgICAgICAgICAgIDwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPCEtLSA8ZGl2IGNsYXNzPSJjb2wtc3Bhbi01IGJnLWdyYXktMjAwIHJvdW5kZWQtbC0yeGwgcHktMyBweC0xIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsZXggbXQtMzAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz0iIGJnLXdoaXRlIGFwcGVhcmFuY2Utbm9uZSBib3JkZXIgcm91bmRlZC0zeGwgdy0yLzMgcHktMiBweC0zIG1iLTMgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LWdyYXktNzAwIGxlYWRpbmctdGlnaHQgZm9jdXM6b3V0bGluZS1ub25lIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9jdXM6c2hhZG93LW91dGxpbmUiIHR5cGU9InRleHQiIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGNoYW5nZT0iICIgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iQmtMc3RfTm93LnByZV90bXBfaWR4IiBwbGFjZWhvbGRlcj0i54mM6JmfLyDpoaflrqLmmrHnqLEiPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1idG4gICBjb2xvcj0iI0U5MUU2MyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJ3LTEvMyBteS0xIHB4LTEiIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc21hbGwgZGFyayBkZW5zZSByb3VuZGVkCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9InNhdmVfQmtpbmdOb3RlKCkiPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOW7uueri+mgkOe0hCA8L3YtYnRuPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZsZXggbXQtMzAiPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkIHNtYWxsIGNsYXNzPSJteC0zIHctMS80IiBsYWJlbD0i5YWl5aC0LuWgseWIsC7mmYLplpMiIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9IiBCa0xzdF9Ob3cucHJlX2xlZnRfdGltZSAiIEBjaGFuZ2U9IiIgZGVuc2U+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LXRleHQtZmllbGQ+IAoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkIHNtYWxsIGNsYXNzPSJteC0zIHctMS80IiBsYWJlbD0i5Lq65pW4IiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSIgQmtMc3RfTm93LnBseV9hbXQgIiBAY2hhbmdlPSIiIGRlbnNlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi10ZXh0LWZpZWxkPiAKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCBzbWFsbCBjbGFzcz0ibXgtMyB3LTEvMyIgbGFiZWw9IuaJi+apnyIgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iIEJrTHN0X05vdy5wcmVfbWJfcGhvbmUgIiBAY2hhbmdlPSIiIGRlbnNlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi10ZXh0LWZpZWxkPiAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gIAogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gIC0tPgoKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zcGFuLTUgZmxleCI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idy0xLzMiPgogICAgICAgICAgICAgICAgICAgICAgICA8di1jaGVja2JveCB0ZXh0IHYtbW9kZWw9ImRpYWxvZyIgQGNsaWNrPSJyZW1vdmVTVCIgbGFiZWw9IumdtuS9jea4heeQhiI+PC92LWNoZWNrYm94PgogICAgICAgICAgICAgICAgICAgICAgICA8di1yb3c+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1idG4gY2xhc3M9Im15LTEiIHYtc2hvdz0iZGlhbG9nIiBzb2xvIEBjbGljaz0icmVTZXRfcG9zXzAiPuWFqOWgtCgwMSB+IDIwKTwvdi1idG4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1idG4gY2xhc3M9Im15LTEiIHYtc2hvdz0iZGlhbG9nIiBzb2xvIEBjbGljaz0icmVTZXRfcG9zXzEiPuWMl+WgtCgwMSB+IDExKTwvdi1idG4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1idG4gY2xhc3M9Im15LTEiIHYtc2hvdz0iZGlhbG9nIiBzb2xvIEBjbGljaz0icmVTZXRfcG9zXzIiPuWNl+WgtCgxMiB+IDE4KTwvdi1idG4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1yb3c+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDwhLS0gPGRpdiBjbGFzcz0idy0xLzMgdGV4dC14cyI+CgogICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hlY2tib3ggdi1tb2RlbD0ic2hvdWxkUHV0IiBjbGFzcz0idGV4dC14cyB3LWZ1bGwiIEBjbGljaz0iY2hrX3ByZVN0KCkiIDpsYWJlbD0iYOmgkOWCmemdtuS9jWAiPjwvdi1jaGVja2JveD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3LTEvMyB0ZXh0LXhzIj4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoZWNrYm94IHYtbW9kZWw9ImNvcHlSaWdodF9NIiBjbGFzcz0idGV4dC14cyB3LWZ1bGwiIDpsYWJlbD0iYOaPm+mgkOe0hOeOqWAiPjwvdi1jaGVja2JveD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gLS0+CgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InctMi8zIG15LTMgZmxleC1yb3cgdGV4dC1zIj4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgY2xhc3M9InB4LTIiIHNtYWxsIGRhcmsgY29sb3I9JyNFOTFFNjMnID4g6LaF5pmCICA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBjbGFzcz0icHgtMiIgc21hbGwgZGFyayBjb2xvcj0nIzU3Y2E4NScgPiDnqbrplpHkuK0gPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgY2xhc3M9InB4LTIiIHNtYWxsIGRhcmsgY29sb3I9JyMyMTk2RjMnID4g5L2/55So5LitIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGNsYXNzPSJweC0yIiBzbWFsbCBkYXJrIGNvbG9yPScjNTQ1NDU0JyA+IOagvOW8j+mMr+iqpCA8L3YtY2hpcD4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gPHYtY2hlY2tib3ggdi1tb2RlbD0iY29weVJpZ2h0X00iIGNsYXNzPSJ0ZXh0LXhzIHctZnVsbCIgOmxhYmVsPSJg5o+b6aCQ57SE546pYCI+PC92LWNoZWNrYm94PiAtLT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPCEtLSA8c3BhbiB2LXNob3c9InNob3VsZFB1dCA9PSB0cnVlIiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImNvbC1zcGFuLTUgdGV4dC1ncmF5LTkwMCBiZy15ZWxsb3ctNDAwIHB5LTIgcHgtMiBmb250LWJsYWNrIHRleHQtcyI+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDmraPlnKjlronmjpIge3sgQmtMaXN0c1tMc3RYXS5wcmVfbGVmdF90aW1lIH1977yMe3sgQmtMaXN0c1tMc3RYXS5wcmVfdG1wX2lkeH19IOeahOS9jeWtkCA8L3NwYW4+IC0tPgoKCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgPGRpdiBjbGFzcz0idy0xMS8xMiAgIj4KICAgICAgICA8di1jYXJkIHYtc2Nyb2xsLnNlbGY9Im9uU2Nyb2xsIiBjbGFzcz0ib3ZlcmZsb3cteS1hdXRvIiBtYXgtaGVpZ2h0PSIxMDgwIj4KCgogICAgICAgICAgICA8di10YWJzIHYtbW9kZWw9InRhYiIgYWN0aXZlLWNsYXNzPSJiZy1ncmF5LTkwMCB0ZXh0LXdoaXRlIiBmaXhlZC10YWJzPgogICAgICAgICAgICAgICAgPHYtdGFiIGtleT0nazEnIGhyZWY9JyNrMScgdi1pZj0iIWhpZGUiPgogICAgICAgICAgICAgICAgICAgIOS4reWkriBf5YyX5aC0CiAgICAgICAgICAgICAgICA8L3YtdGFiPgoKICAgICAgICAgICAgICAgIDx2LXRhYiBrZXk9J2syJyBocmVmPScjazInPgogICAgICAgICAgICAgICAgICAgIOS4reWkriBf5Y2X5aC0CiAgICAgICAgICAgICAgICA8L3YtdGFiPgoKICAgICAgICAgICAgICAgIDx2LXRhYiBrZXk9J2s0JyBocmVmPScjazQnIHYtaWY9IiFoaWRlIj4KICAgICAgICAgICAgICAgICAgICDljJfljJfmnbEgX+WgtAogICAgICAgICAgICAgICAgPC92LXRhYj4KICAgICAgICAgICAgPC92LXRhYnM+CiAgICAgICAgICAgIDx2LXRhYnMtaXRlbXMgdi1tb2RlbD0idGFiIj4KCiAgICAgICAgICAgICAgICA8di10YWItaXRlbSBrZXk9J2sxJyB2YWx1ZT0nazEnPgogICAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDx2LWxpc3QtaXRlbS1ncm91cCBjb2xvcj0icHJpbWFyeSIgY2xhc3M9ImdyaWQgZ3JpZC1jb2xzLTYgZ2FwLTAgICI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1saXN0LWl0ZW0gdi1mb3I9Iih0dXRvcmlhbCwgaW5kZXgpIGluIHR1dG9yaWFscyIgOmtleT0iaW5kZXgiIHYtaWY9InR1dG9yaWFsLnBvcyA9PSfljJcnIiBAY2xpY2s9InNldEFjdGl2ZVR1dG9yaWFsKHR1dG9yaWFsLCBpbmRleCkiIGNsYXNzPSJwLTEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWxpc3QtaXRlbS1jb250ZW50IGNsYXNzPSIgY29sLXNwYW4tMSBwdC0xLjUgcGItMC41IG15LTEgZmxleCBmbGV4LXJvdy1yZXZlcnNlIHRleHQteHMgYm9yZGVyLTIgcm91bmRlZC1zbSAiIDpjbGFzcz0ieyBbYGJnLSR7Y29sb3JbcGFyc2VJbnQodHV0b3JpYWwuc25vKV19LTEwMCBib3JkZXItJHtjb2xvcltwYXJzZUludCh0dXRvcmlhbC5zbm8pXX0tMzAwYF06IDEgfSIgQGNsaWNrPSJzZXRBY3RpdmVUdXRvcmlhbCh0dXRvcmlhbCwgaW5kZXgpIj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zcGFuLTEgZmxleCBwbC0xIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgY2xhc3M9IiB3LWF1dG8gIiA6Y29sb3I9IkNoa1RpbWUyZ2V0Q29sb3JfbWRmKHR1dG9yaWFsLmxlZnRfdGltZSx0dXRvcmlhbC50bXBfaWR4KSIgQGNsaWNrPSJjaGdQb3ModHV0b3JpYWwpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iIGZvbnQtYm9sZCB0ZXh0LXdoaXRlIj57eyB0dXRvcmlhbC5zbm8gfX0te3sgdHV0b3JpYWwuc25vX2lkeCB9fSA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSA8YSBjbGFzcz0iIGZvbnQtYm9sZCB0ZXh0LXdoaXRlIHRleHQteHMiPiB7eyB0dXRvcmlhbC50bXBfaWR4LnNwbGl0KCctLS0nKVsxXSArIjw8IiB9fTwvYT4gLS0+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtY2hpcD4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gPHYtdGV4dC1maWVsZCBzbWFsbCBjbGFzcz0idy0xLzMgbXgtMyIgbGFiZWw9IumbouWgtOaZgumWkyIgdi1tb2RlbD0iIHR1dG9yaWFsLmxlZnRfdGltZSAiIEBjaGFuZ2U9InVwbGRsZWZ0X3RpbWUodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4gLS0+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSA8ZGl2IGNsYXNzPSJmbGV4Ij4gIC0tPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgdi1zaG93PSJjb3B5UmlnaHRfTSA9PSBmYWxzZSAgJiYgdHV0b3JpYWwubWVtbyAhPSAnJyAiIHNtYWxsIGRhcmsgY2xhc3M9ImZsZXgtYXV0byBiZy1yZWQtNTAwIG15LTIgcC0yIGZvbnQtYmxhY2sgdGV4dC1yZWQtMTAwIHRleHQtcyIgY29sb3I9IiNFOTFFNjMiPiDpoJAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAtZ3JvdXAgY2xhc3M9InBsLTIiIHYtbW9kZWw9InR1dG9yaWFsLnBseV9zdGF0dSIgQGNoYW5nZT0idXBsZFN0YXR1KHR1dG9yaWFsKSIgY29sdW1uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgY2xhc3M9InB4LTIiIHYtc2hvdz0idHV0b3JpYWwucGx5X3N0YXR1ICE9ICfnuowu5bey57mzJyIgZmlsdGVyIHNtYWxsIG91dGxpbmVkIHZhbHVlPSLpppbmrKEiPiDpppYgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBjbGFzcz0icHgtMiIgZmlsdGVyIHNtYWxsIG91dGxpbmVkIHZhbHVlPSLlhY3orJvnv5IiPiDlhY0gPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBjbGFzcz0icHgtMiIgZmlsdGVyIHNtYWxsIG91dGxpbmVkIHZhbHVlPSLkuIroqrIiPiDoqrIgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBjbGFzcz0icHgtMiIgdi1zaG93PSJ0dXRvcmlhbC5wbHlfc3RhdHUgPT0gJ+e6jC7lt7LnubMnIiBmaWx0ZXIgc21hbGwgb3V0bGluZWQgdmFsdWU9Iue6jC7lt7LnubMiPiDnuow8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwLWdyb3VwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSA8L2Rpdj4gIC0tPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biBjbGFzcz0iIiB4LXNtYWxsIHYtc2hvdz0iZGlhbG9nIiBAY2xpY2s9InVwbGRfQ2xhZXIodHV0b3JpYWwpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9ImgtNCB3LTQiIGZpbGw9Im5vbmUiIHZpZXdCb3g9IjAgMCAyNCAyNCIgc3Ryb2tlPSJjdXJyZW50Q29sb3IiIHN0cm9rZS13aWR0aD0iMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiIGQ9Ik0xOSA3bC0uODY3IDEyLjE0MkEyIDIgMCAwMTE2LjEzOCAyMUg3Ljg2MmEyIDIgMCAwMS0xLjk5NS0xLjg1OEw1IDdtNSA0djZtNC02djZtMS0xMFY0YTEgMSAwIDAwLTEtMWgtNGExIDEgMCAwMC0xIDF2M000IDdoMTYiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1idG4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1idG4gY2xhc3M9IiIgeC1zbWFsbCB2LXNob3c9IkNoa1RpbWUyZ2V0Q29sb3JfbWRmKHR1dG9yaWFsLmxlZnRfdGltZSx0dXRvcmlhbC50bXBfaWR4KSA9PSAnI0U5MUU2MycgJiYgZGlhbG9nID09ZmFsc2UgIiBAY2xpY2s9InVwbGRfQ2xhZXIodHV0b3JpYWwpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9ImgtNCB3LTQiIGZpbGw9Im5vbmUiIHZpZXdCb3g9IjAgMCAyNCAyNCIgc3Ryb2tlPSJjdXJyZW50Q29sb3IiIHN0cm9rZS13aWR0aD0iMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiIGQ9Ik0xOSA3bC0uODY3IDEyLjE0MkEyIDIgMCAwMTE2LjEzOCAyMUg3Ljg2MmEyIDIgMCAwMS0xLjk5NS0xLjg1OEw1IDdtNSA0djZtNC02djZtMS0xMFY0YTEgMSAwIDAwLTEtMWgtNGExIDEgMCAwMC0xIDF2M000IDdoMTYiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1idG4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc3Bhbi0xIGZsZXgiPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz0iIGJnLXdoaXRlIGFwcGVhcmFuY2Utbm9uZSBib3JkZXIgcm91bmRlZCB3LWZ1bGwgcHktMiBweC0zIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dC1ncmF5LTcwMCBsZWFkaW5nLXRpZ2h0IGZvY3VzOm91dGxpbmUtbm9uZSAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvY3VzOnNoYWRvdy1vdXRsaW5lIiB0eXBlPSJ0ZXh0IiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBjaGFuZ2U9InVwbGR0bXBfaWR4KHR1dG9yaWFsKSIgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJ0dXRvcmlhbC50bXBfaWR4IiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSLmoLzlvI/vvJrniYzomZ8tLS0wMDowMCI+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYnRuIHYtc2hvdz0idHV0b3JpYWwucGx5X3N0YXR1ID09ICfmiJHopoHnuozmmYInIiBjbGFzcz0ibXgtMSIgY29sb3I9IiM0ZjQ2ZTUiIHNtYWxsIGZpbHRlciBkYXJrIHNvbG8gdmFsdWU9IuaIkeimgee6jOaZgiIgQGNsaWNrPSJleHRlbmRQYXlDaGsodHV0b3JpYWwpIj4g57qM5pmCLue5s+iyuyA8L3YtYnRuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYnRuIHYtc2hvdz0idHV0b3JpYWwucGx5X3N0YXR1ID09ICfnuowgMC41JyAiIGNsYXNzPSJteC0xIiBjb2xvcj0iIzRmNDZlNSIgc21hbGwgZmlsdGVyIGRhcmsgc29sbyB2YWx1ZT0i5oiR6KaB57qM5pmCIiBAY2xpY2s9ImV4dGVuZFBheUNoayh0dXRvcmlhbCkiPiDnuowwLjXnubPosrsgPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biB2LXNob3c9InR1dG9yaWFsLnBseV9zdGF0dSA9PSAn57qMIDEuMCcgIiBjbGFzcz0ibXgtMSIgY29sb3I9IiM0ZjQ2ZTUiIHNtYWxsIGZpbHRlciBkYXJrIHNvbG8gdmFsdWU9IuaIkeimgee6jOaZgiIgQGNsaWNrPSJleHRlbmRQYXlDaGsodHV0b3JpYWwpIj4g57qMMS4w57mz6LK7IDwvdi1idG4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1idG4gdi1zaG93PSJ0dXRvcmlhbC5wbHlfc3RhdHUgPT0gJ+WVj+mBjuS4jee6jCcgIiBjbGFzcz0ibXgtMSIgY29sb3I9IiM0NzU1NjkiIHNtYWxsIGZpbHRlciBkYXJrIHNvbG8gdmFsdWU9IuWVj+mBjuS4jee6jCAiPiDllY/pgY7kuI3nuowgPC92LWJ0bj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgdi1zaG93PSJjb3B5UmlnaHRfTSA9PSB0cnVlICIgY2xhc3M9ImNvbC1zcGFuLTEgZmxleCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkIHNtYWxsIGRlbnNlIGNsZWFyYWJsZSBjbGFzcz0idy0yLzMgbXgtMyIgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPSLkuIvmmYLmrrXlronmjpIiIEBjaGFuZ2U9InVwbGRwbGF5R3AodHV0b3JpYWwpIiB2LW1vZGVsPSJ0dXRvcmlhbC5tZW1vIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi10ZXh0LWZpZWxkPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biBjb2xvcj0iI0U5MUU2MyIgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InctYXV0byBteS0yIG1yLTEiIHgtc21hbGwgZGFyayBzb2xvIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtc2hvdz0iY29weVJpZ2h0X00gID09IHRydWUgJiYgc2hvdWxkUHV0ID09IGZhbHNlIiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT0i5oiR6KaB57qM5pmCIiBAY2xpY2s9ImNoZ19DSEtpbih0dXRvcmlhbCkiPiDmj5vkurogPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0tY29udGVudD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICAgICAgICAgICAgICAgICAgICA8L3YtbGlzdC1pdGVtLWdyb3VwPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC92LXRhYi1pdGVtPgoKICAgICAgICAgICAgICAgIDx2LXRhYi1pdGVtIGtleT0nazInIHZhbHVlPSdrMic+CiAgICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtLWdyb3VwIGNvbG9yPSJwcmltYXJ5IiBjbGFzcz0iZ3JpZCBncmlkLWNvbHMtNiBnYXAtMCAgIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWxpc3QtaXRlbSB2LWZvcj0iKHR1dG9yaWFsLCBpbmRleCkgaW4gdHV0b3JpYWxzIiA6a2V5PSJpbmRleCIgdi1pZj0idHV0b3JpYWwucG9zID09J+WNlyciIEBjbGljaz0ic2V0QWN0aXZlVHV0b3JpYWwodHV0b3JpYWwsIGluZGV4KSIgY2xhc3M9InAtMSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWxpc3QtaXRlbS1jb250ZW50IGNsYXNzPSIgY29sLXNwYW4tMSBwdC0xLjUgcGItMC41IG15LTEgZmxleCBmbGV4LXJvdy1yZXZlcnNlIHRleHQteHMgYm9yZGVyLTIgcm91bmRlZC1zbSAiIDpjbGFzcz0ieyBbYGJnLSR7Y29sb3IyW3BhcnNlSW50KHR1dG9yaWFsLnNubyldfS0xMDAgYm9yZGVyLSR7Y29sb3IyW3BhcnNlSW50KHR1dG9yaWFsLnNubyldfS0zMDBgXTogMSB9IiBAY2xpY2s9InNldEFjdGl2ZVR1dG9yaWFsKHR1dG9yaWFsLCBpbmRleCkiPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNwYW4tMSBmbGV4IHBsLTEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBjbGFzcz0iIHctYXV0byAiIDpjb2xvcj0iQ2hrVGltZTJnZXRDb2xvcl9tZGYodHV0b3JpYWwubGVmdF90aW1lLHR1dG9yaWFsLnRtcF9pZHgpIiBAY2xpY2s9ImNoZ1Bvcyh0dXRvcmlhbCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSIgZm9udC1ib2xkIHRleHQtd2hpdGUiPnt7IHR1dG9yaWFsLnNubyB9fS17eyB0dXRvcmlhbC5zbm9faWR4IH19IDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIDxhIGNsYXNzPSIgZm9udC1ib2xkIHRleHQtd2hpdGUgdGV4dC14cyI+IHt7IHR1dG9yaWFsLnRtcF9pZHguc3BsaXQoJy0tLScpWzFdICsiPDwiIH19PC9hPiAtLT4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSA8di10ZXh0LWZpZWxkIHNtYWxsIGNsYXNzPSJ3LTEvMyBteC0zIiBsYWJlbD0i6Zui5aC05pmC6ZaTIiB2LW1vZGVsPSIgdHV0b3JpYWwubGVmdF90aW1lICIgQGNoYW5nZT0idXBsZGxlZnRfdGltZSh0dXRvcmlhbCkiIGRlbnNlPjwvdi10ZXh0LWZpZWxkPiAtLT4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIDxkaXYgY2xhc3M9ImZsZXgiPiAgLS0+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCB2LXNob3c9ImNvcHlSaWdodF9NID09IGZhbHNlICAmJiB0dXRvcmlhbC5tZW1vICE9ICcnICIgc21hbGwgZGFyayBjbGFzcz0iZmxleC1hdXRvIGJnLXJlZC01MDAgbXktMiBwLTIgZm9udC1ibGFjayB0ZXh0LXJlZC0xMDAgdGV4dC1zIiBjb2xvcj0iI0U5MUU2MyI+IOmgkAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNoaXA+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcC1ncm91cCBjbGFzcz0icGwtMiIgdi1tb2RlbD0idHV0b3JpYWwucGx5X3N0YXR1IiBAY2hhbmdlPSJ1cGxkU3RhdHUodHV0b3JpYWwpIiBjb2x1bW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBjbGFzcz0icHgtMiIgdi1zaG93PSJ0dXRvcmlhbC5wbHlfc3RhdHUgIT0gJ+e6jC7lt7LnubMnIiBmaWx0ZXIgc21hbGwgb3V0bGluZWQgdmFsdWU9IummluasoSI+IOmmliA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGNsYXNzPSJweC0yIiBmaWx0ZXIgc21hbGwgb3V0bGluZWQgdmFsdWU9IuWFjeism+e/kiI+IOWFjSA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGNsYXNzPSJweC0yIiBmaWx0ZXIgc21hbGwgb3V0bGluZWQgdmFsdWU9IuS4iuiqsiI+IOiqsiA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGNsYXNzPSJweC0yIiB2LXNob3c9InR1dG9yaWFsLnBseV9zdGF0dSA9PSAn57qMLuW3sue5syciIGZpbHRlciBzbWFsbCBvdXRsaW5lZCB2YWx1ZT0i57qMLuW3sue5syI+IOe6jDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNoaXAtZ3JvdXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIDwvZGl2PiAgLS0+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYnRuIGNsYXNzPSIiIHgtc21hbGwgdi1zaG93PSJkaWFsb2ciIEBjbGljaz0idXBsZF9DbGFlcih0dXRvcmlhbCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0iaC00IHctNCIgZmlsbD0ibm9uZSIgdmlld0JveD0iMCAwIDI0IDI0IiBzdHJva2U9ImN1cnJlbnRDb2xvciIgc3Ryb2tlLXdpZHRoPSIyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIHN0cm9rZS1saW5lY2FwPSJyb3VuZCIgc3Ryb2tlLWxpbmVqb2luPSJyb3VuZCIgZD0iTTE5IDdsLS44NjcgMTIuMTQyQTIgMiAwIDAxMTYuMTM4IDIxSDcuODYyYTIgMiAwIDAxLTEuOTk1LTEuODU4TDUgN201IDR2Nm00LTZ2Nm0xLTEwVjRhMSAxIDAgMDAtMS0xaC00YTEgMSAwIDAwLTEgMXYzTTQgN2gxNiIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biBjbGFzcz0iIiB4LXNtYWxsIHYtc2hvdz0iQ2hrVGltZTJnZXRDb2xvcl9tZGYodHV0b3JpYWwubGVmdF90aW1lLHR1dG9yaWFsLnRtcF9pZHgpID09ICcjRTkxRTYzJyAmJiBkaWFsb2cgPT1mYWxzZSAiIEBjbGljaz0idXBsZF9DbGFlcih0dXRvcmlhbCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBjbGFzcz0iaC00IHctNCIgZmlsbD0ibm9uZSIgdmlld0JveD0iMCAwIDI0IDI0IiBzdHJva2U9ImN1cnJlbnRDb2xvciIgc3Ryb2tlLXdpZHRoPSIyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIHN0cm9rZS1saW5lY2FwPSJyb3VuZCIgc3Ryb2tlLWxpbmVqb2luPSJyb3VuZCIgZD0iTTE5IDdsLS44NjcgMTIuMTQyQTIgMiAwIDAxMTYuMTM4IDIxSDcuODYyYTIgMiAwIDAxLTEuOTk1LTEuODU4TDUgN201IDR2Nm00LTZ2Nm0xLTEwVjRhMSAxIDAgMDAtMS0xaC00YTEgMSAwIDAwLTEgMXYzTTQgN2gxNiIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zcGFuLTEgZmxleCI+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPSIgYmctd2hpdGUgYXBwZWFyYW5jZS1ub25lIGJvcmRlciByb3VuZGVkIHctZnVsbCBweS0yIHB4LTMgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LWdyYXktNzAwIGxlYWRpbmctdGlnaHQgZm9jdXM6b3V0bGluZS1ub25lIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9jdXM6c2hhZG93LW91dGxpbmUiIHR5cGU9InRleHQiIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGNoYW5nZT0idXBsZHRtcF9pZHgodHV0b3JpYWwpIiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InR1dG9yaWFsLnRtcF9pZHgiIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IuagvOW8j++8mueJjOiZny0tLTAwOjAwIj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1idG4gdi1zaG93PSJ0dXRvcmlhbC5wbHlfc3RhdHUgPT0gJ+aIkeimgee6jOaZgiciIGNsYXNzPSJteC0xIiBjb2xvcj0iIzRmNDZlNSIgc21hbGwgZmlsdGVyIGRhcmsgc29sbyB2YWx1ZT0i5oiR6KaB57qM5pmCIiBAY2xpY2s9ImV4dGVuZFBheUNoayh0dXRvcmlhbCkiPiDnuozmmYIu57mz6LK7IDwvdi1idG4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1idG4gdi1zaG93PSJ0dXRvcmlhbC5wbHlfc3RhdHUgPT0gJ+e6jCAwLjUnICIgY2xhc3M9Im14LTEiIGNvbG9yPSIjNGY0NmU1IiBzbWFsbCBmaWx0ZXIgZGFyayBzb2xvIHZhbHVlPSLmiJHopoHnuozmmYIiIEBjbGljaz0iZXh0ZW5kUGF5Q2hrKHR1dG9yaWFsKSI+IOe6jDAuNee5s+iyuyA8L3YtYnRuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYnRuIHYtc2hvdz0idHV0b3JpYWwucGx5X3N0YXR1ID09ICfnuowgMS4wJyAiIGNsYXNzPSJteC0xIiBjb2xvcj0iIzRmNDZlNSIgc21hbGwgZmlsdGVyIGRhcmsgc29sbyB2YWx1ZT0i5oiR6KaB57qM5pmCIiBAY2xpY2s9ImV4dGVuZFBheUNoayh0dXRvcmlhbCkiPiDnuowxLjDnubPosrsgPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biB2LXNob3c9InR1dG9yaWFsLnBseV9zdGF0dSA9PSAn5ZWP6YGO5LiN57qMJyAiIGNsYXNzPSJteC0xIiBjb2xvcj0iIzQ3NTU2OSIgc21hbGwgZmlsdGVyIGRhcmsgc29sbyB2YWx1ZT0i5ZWP6YGO5LiN57qMICI+IOWVj+mBjuS4jee6jCA8L3YtYnRuPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiB2LXNob3c9ImNvcHlSaWdodF9NID09IHRydWUgIiBjbGFzcz0iY29sLXNwYW4tMSBmbGV4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQgc21hbGwgZGVuc2UgY2xlYXJhYmxlIGNsYXNzPSJ3LTIvMyBteC0zIiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9IuS4i+aZguauteWuieaOkiIgQGNoYW5nZT0idXBsZHBsYXlHcCh0dXRvcmlhbCkiIHYtbW9kZWw9InR1dG9yaWFsLm1lbW8iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LXRleHQtZmllbGQ+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYnRuIGNvbG9yPSIjRTkxRTYzIiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0idy1hdXRvIG15LTIgbXItMSIgeC1zbWFsbCBkYXJrIHNvbG8gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1zaG93PSJjb3B5UmlnaHRfTSAgPT0gdHJ1ZSAmJiBzaG91bGRQdXQgPT0gZmFsc2UiIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPSLmiJHopoHnuozmmYIiIEBjbGljaz0iY2hnX0NIS2luKHR1dG9yaWFsKSI+IOaPm+S6uiA8L3YtYnRuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbS1jb250ZW50PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0tZ3JvdXA+CgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC92LXRhYi1pdGVtPgoKICAgICAgICAgICAgICAgIDx2LXRhYi1pdGVtIGtleT0nazMnIHZhbHVlPSdrMyc+CiAgICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSB7eyB0dXRvcmlhbCB9fSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtLWdyb3VwIGNvbG9yPSJwcmltYXJ5IiBjbGFzcz0iZ3JpZCBncmlkLWNvbHMtNiBnYXAtMCAgIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWxpc3QtaXRlbSB2LWZvcj0iKHR1dG9yaWFsLCBpbmRleCkgaW4gdHV0b3JpYWxzIiA6a2V5PSJpbmRleCIgdi1pZj0idHV0b3JpYWwucG9zID09J+WNlyciIEBjbGljaz0ic2V0QWN0aXZlVHV0b3JpYWwodHV0b3JpYWwsIGluZGV4KSIgY2xhc3M9InAtMSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtLWNvbnRlbnQgY2xhc3M9IiBjb2wtc3Bhbi0xIHB0LTEuNSBwYi0wLjUgbXktMSBmbGV4IGZsZXgtcm93LXJldmVyc2UgdGV4dC14cyBib3JkZXItMiByb3VuZGVkLXNtICIgOmNsYXNzPSJ7IFtgYmctJHtjb2xvcjJbcGFyc2VJbnQodHV0b3JpYWwuc25vKV19LTEwMCBib3JkZXItJHtjb2xvcjJbcGFyc2VJbnQodHV0b3JpYWwuc25vKV19LTMwMGBdOiAyIH0iIEBjbGljaz0ic2V0QWN0aXZlVHV0b3JpYWwodHV0b3JpYWwsIGluZGV4KSI+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIG9yZGVyLWxhc3QgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zcGFuLTEgZmxleCBwbC0xIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgY2xhc3M9IiB3LWF1dG8gIiA6Y29sb3I9IkNoa1RpbWUyZ2V0Q29sb3IodHV0b3JpYWwubGVmdF90aW1lKSIgQGNsaWNrPSJjaGdQb3ModHV0b3JpYWwpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iIGZvbnQtYm9sZCB0ZXh0LXdoaXRlIj57eyB0dXRvcmlhbC5zbm8gfX0te3sgdHV0b3JpYWwuc25vX2lkeCB9fSA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtY2hpcD4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkIHNtYWxsIGNsYXNzPSJ3LTEvMyBteC0zIiBsYWJlbD0i6Zui5aC05pmC6ZaTIiB2LW1vZGVsPSIgdHV0b3JpYWwubGVmdF90aW1lICIgQGNoYW5nZT0idXBsZGxlZnRfdGltZSh0dXRvcmlhbCkiIGRlbnNlPjwvdi10ZXh0LWZpZWxkPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biBjbGFzcz0iIiB4LXNtYWxsIHYtc2hvdz0iZGlhbG9nIiBAY2xpY2s9InVwbGRfQ2xhZXIodHV0b3JpYWwpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgY2xhc3M9ImgtNCB3LTQiIGZpbGw9Im5vbmUiIHZpZXdCb3g9IjAgMCAyNCAyNCIgc3Ryb2tlPSJjdXJyZW50Q29sb3IiIHN0cm9rZS13aWR0aD0iMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIHN0cm9rZS1saW5lY2FwPSJyb3VuZCIgc3Ryb2tlLWxpbmVqb2luPSJyb3VuZCIgZD0iTTE5IDdsLS44NjcgMTIuMTQyQTIgMiAwIDAxMTYuMTM4IDIxSDcuODYyYTIgMiAwIDAxLTEuOTk1LTEuODU4TDUgN201IDR2Nm00LTZ2Nm0xLTEwVjRhMSAxIDAgMDAtMS0xaC00YTEgMSAwIDAwLTEgMXYzTTQgN2gxNiIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtYnRuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNwYW4tMSBmbGV4Ij4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIDx2LXRleHQtZmllbGQgc29sbyBjbGFzcz0iY29sLXNwYW4tMSBteC0xMCIgbGFiZWw9IueJjOiZnyIgdi1tb2RlbD0iIHR1dG9yaWFsLnRtcF9pZHggIiBAY2hhbmdlPSJ1cGxkdG1wX2lkeCh0dXRvcmlhbCkiIGRlbnNlPjwvdi10ZXh0LWZpZWxkPiAtLT4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9IiBiZy13aGl0ZSBhcHBlYXJhbmNlLW5vbmUgYm9yZGVyIHJvdW5kZWQgdy1mdWxsIHB5LTIgcHgtMyAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQtZ3JheS03MDAgbGVhZGluZy10aWdodCBmb2N1czpvdXRsaW5lLW5vbmUgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb2N1czpzaGFkb3ctb3V0bGluZSIgdHlwZT0idGV4dCIgQGNoYW5nZT0idXBsZHRtcF9pZHgodHV0b3JpYWwpIiB2LW1vZGVsPSJ0dXRvcmlhbC50bXBfaWR4IiBwbGFjZWhvbGRlcj0i54mM6JmfLyDpoaflrqLmmrHnqLEiPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biB2LXNob3c9InR1dG9yaWFsLnBseV9zdGF0dSA9PSAn5oiR6KaB57qM5pmCJyIgY29sb3I9IiM0ZjQ2ZTUiIGNsYXNzPSJteC0xIiBzbWFsbCBmaWx0ZXIgZGFyayBzb2xvIHZhbHVlPSLmiJHopoHnuozmmYIiIEBjbGljaz0iZXh0ZW5kUGF5Q2hrKHR1dG9yaWFsKSI+IOe6jOaZgi7nubPosrsgPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biB2LXNob3c9InR1dG9yaWFsLnBseV9zdGF0dSA9PSAn57qMIDAuNScgIiBjb2xvcj0iIzRmNDZlNSIgY2xhc3M9Im14LTEiIHNtYWxsIGZpbHRlciBkYXJrIHNvbG8gdmFsdWU9IuaIkeimgee6jOaZgiIgQGNsaWNrPSJleHRlbmRQYXlDaGsodHV0b3JpYWwpIj4g57qMMC4157mz6LK7IDwvdi1idG4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1idG4gdi1zaG93PSJ0dXRvcmlhbC5wbHlfc3RhdHUgPT0gJ+e6jCAxLjAnICIgY29sb3I9IiM0ZjQ2ZTUiIGNsYXNzPSJteC0xIiBzbWFsbCBmaWx0ZXIgZGFyayBzb2xvIHZhbHVlPSLmiJHopoHnuozmmYIiIEBjbGljaz0iZXh0ZW5kUGF5Q2hrKHR1dG9yaWFsKSI+IOe6jDEuMOe5s+iyuyA8L3YtYnRuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYnRuIHYtc2hvdz0idHV0b3JpYWwucGx5X3N0YXR1ID09ICfllY/pgY7kuI3nuownICIgY2xhc3M9Im14LTEiIGNvbG9yPSIjNDc1NTY5IiBzbWFsbCBmaWx0ZXIgZGFyayBzb2xvIHZhbHVlPSLllY/pgY7kuI3nuowgICI+IOWVj+mBjuS4jee6jCA8L3YtYnRuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCBjbGFzcz0iY29sLXNwYW4tMSBtci0zIiB2LXNob3c9InVzZV9CS2luZ0dwIiBsYWJlbD0i5a6i5Lq65YKZ6Ki7IiB2LW1vZGVsPSIgdHV0b3JpYWwubWVtbyAiIEBjaGFuZ2U9InVwbGRwbGF5R3AodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4KCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwLWdyb3VwIHYtbW9kZWw9InR1dG9yaWFsLnBseV9zdGF0dSIgQGNoYW5nZT0idXBsZFN0YXR1KHR1dG9yaWFsKSIgY29sdW1uIGNsYXNzPSIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBjbGFzcz0icHgtMiIgZmlsdGVyIHNtYWxsIG91dGxpbmVkIHZhbHVlPSLpppbmrKEiPiDpppYgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGNsYXNzPSJweC0yIiBmaWx0ZXIgc21hbGwgb3V0bGluZWQgdmFsdWU9IuWFjeism+e/kiI+IOWFjSA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgY2xhc3M9InB4LTIiIGZpbHRlciBzbWFsbCBvdXRsaW5lZCB2YWx1ZT0i5LiK6KqyIj4g6KqyIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBjbGFzcz0icHgtMiIgdi1zaG93PSJ0dXRvcmlhbC5wbHlfc3RhdHUgPT0gJ+e6jC7lt7LnubMnIiBmaWx0ZXIgc21hbGwgb3V0bGluZWQgdmFsdWU9Iue6jC7lt7LnubMiPiDnuowgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwLWdyb3VwPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtbGlzdC1pdGVtLWNvbnRlbnQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtbGlzdC1pdGVtPgoKICAgICAgICAgICAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbS1ncm91cD4KCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L3YtdGFiLWl0ZW0+CiAgICAgICAgICAgIDwvdi10YWJzLWl0ZW1zPgogICAgICAgIDwvdi1jYXJkPgogICAgPC9kaXY+CgoKCjwvZGl2Pgo="},null]}