{"remainingRequest":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/src/components/bdadd5_List.vue?vue&type=template&id=e1ed2f36&","dependencies":[{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/src/components/bdadd5_List.vue","mtime":1655006448863},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/射箭專案/GitHub/17soooo/17soooo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2IGNsYXNzPSIgZmxleCBqdXN0aWZ5LWNlbnRlciAgIj4KICAgIAogICAgICAgIDxkaXYgY2xhc3M9InctMS80IG1sLTEwIj4KICAgICAgICAgICAgPHYtYmFubmVyIHN0aWNreT4KICAgICAgICAgICAgICAgIDwhLS0gZ3JpZCBncmlkLWNvbHMtNSBnYXAtMSAgLS0+IAogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxleC1jIGp1c3RpZnktY2VudGVyIHctZnVsbCAiPiAgCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibXgtMSI+CiAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGVja2JveCB2LW1vZGVsPSJjb3B5UmlnaHRfVCIgOmxhYmVsPSJg6bue5pOK5b6MLiDllZ/li5XopIfoo73lt6XlhbdgIj48L3YtY2hlY2tib3g+ICAKICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCAgY2xlYXJhYmxlIHNvbG8gZGVuc2UgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJiY2hfbGVmdF90aW1lIiBjbGFzcz0idGV4dC14cyAiIGxhYmVsPSLpm6LloLTmmYLplpMiIHBsYWNlaG9sZGVyPSLpm6LmmYLplpMiPgogICAgICAgICAgICAgICAgICAgICAgICA8L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAKICAgICAgICAgICAgICAgICAgICA8aHI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibXgtMSI+IAogICAgICAgICAgICAgICAgICAgICAgICA8di1jaGVja2JveCB2LW1vZGVsPSJ1c2VfQktpbmdHcCIgICA6bGFiZWw9ImDpu57mk4rlvowuIOmhr+ekuuWuouS6uue+pOe1hCBgICIgPjwvdi1jaGVja2JveD4KICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hlY2tib3ggdi1tb2RlbD0iY29weVJpZ2h0X00iICAgOmxhYmVsPSJg6bue5pOK5b6MLiDllZ/li5XopIfoo73lt6XlhbcgYCAiID48L3YtY2hlY2tib3g+IAogICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCAgY2xlYXJhYmxlIHNvbG8gZGVuc2UgIHYtbW9kZWw9ImJjaF9tZW1vIiBjbGFzcz0idGV4dC14cyAgIiBsYWJlbD0i5a6i5Lq65YKZ6Ki7IiAgPgogICAgICAgICAgICAgICAgICAgICAgICA8L3YtdGV4dC1maWVsZD4gICAgCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im14LTEiPgogICAgICAgICAgICAgICAgICAgICAgICA8di1jaGVja2JveCB0ZXh0IHYtbW9kZWw9ImRpYWxvZyIgQGNsaWNrPSJyZW1vdmVTVCIgbGFiZWw9IumWi+WVny7pnbbkvY3muIXnkIblt6XlhbciPjwvdi1jaGVja2JveD4KICAgICAgICAgICAgICAgICAgICAgICAgPHYtcm93ID4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1idG4gY2xhc3M9Im15LTEiIHYtc2hvdz0iZGlhbG9nIiBzb2xvIEBjbGljaz0icmVTZXRfcG9zXzAiPuWFqOWgtCgwMSB+IDIwKTwvdi1idG4+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYnRuIGNsYXNzPSJteS0xIiB2LXNob3c9ImRpYWxvZyIgc29sbyBAY2xpY2s9InJlU2V0X3Bvc18xIj7ljJfloLQoMDEgfiAxMSk8L3YtYnRuPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biBjbGFzcz0ibXktMSIgdi1zaG93PSJkaWFsb2ciIHNvbG8gQGNsaWNrPSJyZVNldF9wb3NfMiI+5Y2X5aC0KDEyIH4gMTgpPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgICAgICAgPC92LXJvdz4gCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgIDxicj4KCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibXgtMSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgIOebruWJjeS4iue3muS6uuaVuO+8miAgKOmgkOioiOmhr+ekuiDlip/og70pCiAKICAgICAgICAgICAgICAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAg5YyX5aC0KOmmluasoS8g57qM5pmCKToKICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgPGJyPgogICAgICAgICAgICAgICAgICAgICAgICAg5Y2X5aC0KOmmluasoS8g57qM5pmCKToKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC92LWJhbm5lcj4KICAgICAgICA8L2Rpdj4KICAgIAogICAgICAgIDxkaXYgY2xhc3M9InctMy80Ij4KICAgICAgICAgICAgPCEtLSA8di12aXJ0dWFsLXNjcm9sbCA+IC0tPgogICAgICAgICAgICA8di1jYXJkCiAgICAgICAgICAgICAgICB2LXNjcm9sbC5zZWxmPSJvblNjcm9sbCIKICAgICAgICAgICAgICAgIGNsYXNzPSJvdmVyZmxvdy15LWF1dG8iCiAgICAgICAgICAgICAgICBtYXgtaGVpZ2h0PSI3MjAiCiAgICAgICAgICAgID4KICAgICAgICAgICAgCiAgICAgICAgICAgIDx2LXRhYnMgdi1tb2RlbD0idGFiIiBhY3RpdmUtY2xhc3M9ImJnLWdyYXktOTAwIHRleHQtd2hpdGUiIGZpeGVkLXRhYnM+CiAgICAgICAgICAgICAgICA8di10YWIga2V5PSdrMScgaHJlZj0nI2sxJyB2LWlmPSIhaGlkZSI+CiAgICAgICAgICAgICAgICAgICAg5Lit5aSuIF/ljJfloLQKICAgICAgICAgICAgICAgIDwvdi10YWI+CiAgICAKICAgICAgICAgICAgICAgIDx2LXRhYiBrZXk9J2syJyBocmVmPScjazInPgogICAgICAgICAgICAgICAgICAgIOS4reWkriBf5Y2X5aC0CiAgICAgICAgICAgICAgICA8L3YtdGFiPgogICAgCiAgICAgICAgICAgICAgICA8di10YWIga2V5PSdrMycgaHJlZj0nI2szJyB2LWlmPSIhaGlkZSI+CiAgICAgICAgICAgICAgICAgICAg5YyX5YyX5p2xIF/loLQKICAgICAgICAgICAgICAgIDwvdi10YWI+CiAgICAgICAgICAgIDwvdi10YWJzPgogICAgICAgICAgICA8di10YWJzLWl0ZW1zIHYtbW9kZWw9InRhYiI+CiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHYtdGFiLWl0ZW0ga2V5PSdrMScgdmFsdWU9J2sxJz4gICAKICAgICAgICAgICAgICAgICAgICA8ZGl2PiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWxpc3QtaXRlbS1ncm91cCBjb2xvcj0icHJpbWFyeSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtIHYtZm9yPSIodHV0b3JpYWwsIGluZGV4KSBpbiB0dXRvcmlhbHMiIDprZXk9ImluZGV4IiB2LWlmPSJ0dXRvcmlhbC5wb3MgPT0n5YyXJyIgQGNsaWNrPSJzZXRBY3RpdmVUdXRvcmlhbCh0dXRvcmlhbCwgaW5kZXgpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1saXN0LWl0ZW0tY29udGVudCBjbGFzcz0iIHRleHQteHMgIHB5LTIgcGwtMyBteS0xIGJvcmRlci0yIHJvdW5kZWQtc20gYmctcmVkLTEwMCBib3JkZXItcmVkLTMwMCAiIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1pZj0idHV0b3JpYWwuc25vID09JzEnfCB0dXRvcmlhbC5zbm8gPT0nMicgIiBAY2xpY2s9InNldEFjdGl2ZVR1dG9yaWFsKHR1dG9yaWFsLCBpbmRleCkiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJncmlkIGdyaWQtY29scy03IGdhcC0xIj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zcGFuLTIgZmxleCBKdXN0aWZ5LWVuZCI+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYnRuIGNsYXNzPSIgbXgtNiIgIHYtc2hvdz0iZGlhbG9nIiAgQGNsaWNrPSJ1cGxkX0NsYWVyKHR1dG9yaWFsKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg5riF5o6D6Z225L2NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBjbGFzcz0ibXktMiBtci0zIiAgIDpjb2xvcj0iQ2hrVGltZTJnZXRDb2xvcih0dXRvcmlhbC5sZWZ0X3RpbWUpIiA+ICB7eyB0dXRvcmlhbC5wb3MgfX1fe3sgdHV0b3JpYWwuc25vIH19X3t7IHR1dG9yaWFsLnNub19pZHggfX0gIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCAgdi1zaG93PSJ1c2VfQktpbmdHcCIgY2xhc3M9IiBtci0zIiBsYWJlbD0i5a6i5Lq65YKZ6Ki7IiB2LW1vZGVsPSIgdHV0b3JpYWwubWVtbyAiIEBjaGFuZ2U9InVwbGRwbGF5R3AodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc3Bhbi01IGZsZXgiPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCBzb2xvIGNsYXNzPSJ3LTEvNSBteC02IiBsYWJlbD0i54mM6JmfIiAgICAgdi1tb2RlbD0iIHR1dG9yaWFsLnRtcF9pZHggIiAgIEBjaGFuZ2U9InVwbGR0bXBfaWR4KHR1dG9yaWFsKSIgZGVuc2U+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkICBjbGFzcz0idy0xLzUgbXgtMyIgbGFiZWw9IumbouWgtOaZgumWkyIgdi1tb2RlbD0iIHR1dG9yaWFsLmxlZnRfdGltZSAiIEBjaGFuZ2U9InVwbGRsZWZ0X3RpbWUodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwLWdyb3VwIHYtbW9kZWw9InR1dG9yaWFsLnBseV9zdGF0dSIgQGNoYW5nZT0idXBsZFN0YXR1KHR1dG9yaWFsKSIgY29sdW1uICBjbGFzcz0idy0zLzUiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBzbWFsbCBvdXRsaW5lZCB2YWx1ZT0i6aaW5qyhIiA+ICDpppbmrKEgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgc21hbGwgb3V0bGluZWQgdmFsdWU9IuWFjeism+e/kiIgPiAg5YWN6Kyb57+SIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIHNtYWxsIG91dGxpbmVkIHZhbHVlPSLnuowwLjUiIEBjbGljaz0ibGVmdF9NZGYoMSx0dXRvcmlhbCkiID4gIOe6jOaZgjAuNSA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBzbWFsbCBvdXRsaW5lZCB2YWx1ZT0i57qMMS4wIiBAY2xpY2s9ImxlZnRfTWRmKDIsdHV0b3JpYWwpIiA+ICDnuozmmYIxLjAgPC92LWNoaXA+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNoaXAtZ3JvdXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbS1jb250ZW50PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1saXN0LWl0ZW0tY29udGVudCBjbGFzcz0iIHRleHQteHMgIHB5LTIgcGwtMyBteS0xIGJvcmRlci0yIHJvdW5kZWQtc20gYmcteWVsbG93LTEwMCBib3JkZXIteWVsbG93LTMwMCAiIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1pZj0idHV0b3JpYWwuc25vID09JzMnfCB0dXRvcmlhbC5zbm8gPT0nNCcgIiBAY2xpY2s9InNldEFjdGl2ZVR1dG9yaWFsKHR1dG9yaWFsLCBpbmRleCkiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJncmlkIGdyaWQtY29scy03IGdhcC0xIj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zcGFuLTIgZmxleCBKdXN0aWZ5LWVuZCI+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYnRuIGNsYXNzPSIgbXgtNiIgIHYtc2hvdz0iZGlhbG9nIiAgQGNsaWNrPSJ1cGxkX0NsYWVyKHR1dG9yaWFsKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg5riF5o6D6Z225L2NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBjbGFzcz0ibXktMiBtci0zIiAgIDpjb2xvcj0iQ2hrVGltZTJnZXRDb2xvcih0dXRvcmlhbC5sZWZ0X3RpbWUpIiA+ICB7eyB0dXRvcmlhbC5wb3MgfX1fe3sgdHV0b3JpYWwuc25vIH19X3t7IHR1dG9yaWFsLnNub19pZHggfX0gIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCAgdi1zaG93PSJ1c2VfQktpbmdHcCIgY2xhc3M9IiBtci0zIiBsYWJlbD0i5a6i5Lq65YKZ6Ki7IiB2LW1vZGVsPSIgdHV0b3JpYWwubWVtbyAiIEBjaGFuZ2U9InVwbGRwbGF5R3AodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc3Bhbi01IGZsZXgiPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCBzb2xvIGNsYXNzPSJ3LTEvNSBteC02IiBsYWJlbD0i54mM6JmfIiAgICAgdi1tb2RlbD0iIHR1dG9yaWFsLnRtcF9pZHggIiAgIEBjaGFuZ2U9InVwbGR0bXBfaWR4KHR1dG9yaWFsKSIgZGVuc2U+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkICBjbGFzcz0idy0xLzUgbXgtMyIgbGFiZWw9IumbouWgtOaZgumWkyIgdi1tb2RlbD0iIHR1dG9yaWFsLmxlZnRfdGltZSAiIEBjaGFuZ2U9InVwbGRsZWZ0X3RpbWUodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwLWdyb3VwIHYtbW9kZWw9InR1dG9yaWFsLnBseV9zdGF0dSIgQGNoYW5nZT0idXBsZFN0YXR1KHR1dG9yaWFsKSIgY29sdW1uICBjbGFzcz0idy0zLzUiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBzbWFsbCBvdXRsaW5lZCB2YWx1ZT0i6aaW5qyhIiA+ICDpppbmrKEgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgc21hbGwgb3V0bGluZWQgdmFsdWU9IuWFjeism+e/kiIgPiAg5YWN6Kyb57+SIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIHNtYWxsIG91dGxpbmVkIHZhbHVlPSLnuowwLjUiIEBjbGljaz0ibGVmdF9NZGYoMSx0dXRvcmlhbCkiID4gIOe6jOaZgjAuNSA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBzbWFsbCBvdXRsaW5lZCB2YWx1ZT0i57qMMS4wIiBAY2xpY2s9ImxlZnRfTWRmKDIsdHV0b3JpYWwpIiA+ICDnuozmmYIxLjAgPC92LWNoaXA+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNoaXAtZ3JvdXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbS1jb250ZW50PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1saXN0LWl0ZW0tY29udGVudCBjbGFzcz0iIHRleHQteHMgIHB5LTIgcGwtMyBteS0xIGJvcmRlci0yIHJvdW5kZWQtc20gYmctZ3JlZW4tMTAwIGJvcmRlci1ncmVlbi0zMDAgIiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtaWY9InR1dG9yaWFsLnNubyA9PSc1J3wgdHV0b3JpYWwuc25vID09JzYnICIgQGNsaWNrPSJzZXRBY3RpdmVUdXRvcmlhbCh0dXRvcmlhbCwgaW5kZXgpIiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ3JpZCBncmlkLWNvbHMtNyBnYXAtMSI+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc3Bhbi0yIGZsZXggSnVzdGlmeS1lbmQiPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biBjbGFzcz0iIG14LTYiICB2LXNob3c9ImRpYWxvZyIgIEBjbGljaz0idXBsZF9DbGFlcih0dXRvcmlhbCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOa4heaOg+mdtuS9jQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1idG4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgY2xhc3M9Im15LTIgbXItMyIgICA6Y29sb3I9IkNoa1RpbWUyZ2V0Q29sb3IodHV0b3JpYWwubGVmdF90aW1lKSIgPiAge3sgdHV0b3JpYWwucG9zIH19X3t7IHR1dG9yaWFsLnNubyB9fV97eyB0dXRvcmlhbC5zbm9faWR4IH19ICA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQgIHYtc2hvdz0idXNlX0JLaW5nR3AiIGNsYXNzPSIgbXItMyIgbGFiZWw9IuWuouS6uuWCmeiouyIgdi1tb2RlbD0iIHR1dG9yaWFsLm1lbW8gIiBAY2hhbmdlPSJ1cGxkcGxheUdwKHR1dG9yaWFsKSIgZGVuc2U+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNwYW4tNSBmbGV4Ij4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQgc29sbyBjbGFzcz0idy0xLzUgbXgtNiIgbGFiZWw9IueJjOiZnyIgICAgIHYtbW9kZWw9IiB0dXRvcmlhbC50bXBfaWR4ICIgICBAY2hhbmdlPSJ1cGxkdG1wX2lkeCh0dXRvcmlhbCkiIGRlbnNlPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCAgY2xhc3M9InctMS81IG14LTMiIGxhYmVsPSLpm6LloLTmmYLplpMiIHYtbW9kZWw9IiB0dXRvcmlhbC5sZWZ0X3RpbWUgIiBAY2hhbmdlPSJ1cGxkbGVmdF90aW1lKHR1dG9yaWFsKSIgZGVuc2U+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcC1ncm91cCB2LW1vZGVsPSJ0dXRvcmlhbC5wbHlfc3RhdHUiIEBjaGFuZ2U9InVwbGRTdGF0dSh0dXRvcmlhbCkiIGNvbHVtbiAgY2xhc3M9InctMy81IiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgc21hbGwgb3V0bGluZWQgdmFsdWU9IummluasoSIgPiAg6aaW5qyhIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIHNtYWxsIG91dGxpbmVkIHZhbHVlPSLlhY3orJvnv5IiID4gIOWFjeism+e/kiA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBzbWFsbCBvdXRsaW5lZCB2YWx1ZT0i57qMMC41IiBAY2xpY2s9ImxlZnRfTWRmKDEsdHV0b3JpYWwpIiA+ICDnuozmmYIwLjUgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgc21hbGwgb3V0bGluZWQgdmFsdWU9Iue6jDEuMCIgQGNsaWNrPSJsZWZ0X01kZigyLHR1dG9yaWFsKSIgPiAg57qM5pmCMS4wIDwvdi1jaGlwPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwLWdyb3VwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0tY29udGVudD4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtLWNvbnRlbnQgY2xhc3M9IiB0ZXh0LXhzICBweS0yIHBsLTMgbXktMSBib3JkZXItMiByb3VuZGVkLXNtIGJnLWdyYXktMTAwIGJvcmRlci1ncmF5LTMwMCAiIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1pZj0idHV0b3JpYWwuc25vID09JzcnfCB0dXRvcmlhbC5zbm8gPT0nOCcgIiBAY2xpY2s9InNldEFjdGl2ZVR1dG9yaWFsKHR1dG9yaWFsLCBpbmRleCkiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJncmlkIGdyaWQtY29scy03IGdhcC0xIj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zcGFuLTIgZmxleCBKdXN0aWZ5LWVuZCI+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYnRuIGNsYXNzPSIgbXgtNiIgIHYtc2hvdz0iZGlhbG9nIiAgQGNsaWNrPSJ1cGxkX0NsYWVyKHR1dG9yaWFsKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg5riF5o6D6Z225L2NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBjbGFzcz0ibXktMiBtci0zIiAgIDpjb2xvcj0iQ2hrVGltZTJnZXRDb2xvcih0dXRvcmlhbC5sZWZ0X3RpbWUpIiA+ICB7eyB0dXRvcmlhbC5wb3MgfX1fe3sgdHV0b3JpYWwuc25vIH19X3t7IHR1dG9yaWFsLnNub19pZHggfX0gIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCAgdi1zaG93PSJ1c2VfQktpbmdHcCIgY2xhc3M9IiBtci0zIiBsYWJlbD0i5a6i5Lq65YKZ6Ki7IiB2LW1vZGVsPSIgdHV0b3JpYWwubWVtbyAiIEBjaGFuZ2U9InVwbGRwbGF5R3AodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc3Bhbi01IGZsZXgiPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCBzb2xvIGNsYXNzPSJ3LTEvNSBteC02IiBsYWJlbD0i54mM6JmfIiAgICAgdi1tb2RlbD0iIHR1dG9yaWFsLnRtcF9pZHggIiAgIEBjaGFuZ2U9InVwbGR0bXBfaWR4KHR1dG9yaWFsKSIgZGVuc2U+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkICBjbGFzcz0idy0xLzUgbXgtMyIgbGFiZWw9IumbouWgtOaZgumWkyIgdi1tb2RlbD0iIHR1dG9yaWFsLmxlZnRfdGltZSAiIEBjaGFuZ2U9InVwbGRsZWZ0X3RpbWUodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwLWdyb3VwIHYtbW9kZWw9InR1dG9yaWFsLnBseV9zdGF0dSIgQGNoYW5nZT0idXBsZFN0YXR1KHR1dG9yaWFsKSIgY29sdW1uICBjbGFzcz0idy0zLzUiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBzbWFsbCBvdXRsaW5lZCB2YWx1ZT0i6aaW5qyhIiA+ICDpppbmrKEgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgc21hbGwgb3V0bGluZWQgdmFsdWU9IuWFjeism+e/kiIgPiAg5YWN6Kyb57+SIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIHNtYWxsIG91dGxpbmVkIHZhbHVlPSLnuowwLjUiIEBjbGljaz0ibGVmdF9NZGYoMSx0dXRvcmlhbCkiID4gIOe6jOaZgjAuNSA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBzbWFsbCBvdXRsaW5lZCB2YWx1ZT0i57qMMS4wIiBAY2xpY2s9ImxlZnRfTWRmKDIsdHV0b3JpYWwpIiA+ICDnuozmmYIxLjAgPC92LWNoaXA+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNoaXAtZ3JvdXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbS1jb250ZW50PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1saXN0LWl0ZW0tY29udGVudCBjbGFzcz0iIHRleHQteHMgIHB5LTIgcGwtMyBteS0xIGJvcmRlci0yIHJvdW5kZWQtc20gYmctLTEwMCBib3JkZXItcmVkLTMwMCAiIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1pZj0idHV0b3JpYWwuc25vID09JzknfCB0dXRvcmlhbC5zbm8gPT0nMTAnICIgQGNsaWNrPSJzZXRBY3RpdmVUdXRvcmlhbCh0dXRvcmlhbCwgaW5kZXgpIiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ3JpZCBncmlkLWNvbHMtNyBnYXAtMSI+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc3Bhbi0yIGZsZXggSnVzdGlmeS1lbmQiPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biBjbGFzcz0iIG14LTYiICB2LXNob3c9ImRpYWxvZyIgIEBjbGljaz0idXBsZF9DbGFlcih0dXRvcmlhbCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOa4heaOg+mdtuS9jQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1idG4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgY2xhc3M9Im15LTIgbXItMyIgICA6Y29sb3I9IkNoa1RpbWUyZ2V0Q29sb3IodHV0b3JpYWwubGVmdF90aW1lKSIgPiAge3sgdHV0b3JpYWwucG9zIH19X3t7IHR1dG9yaWFsLnNubyB9fV97eyB0dXRvcmlhbC5zbm9faWR4IH19ICA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQgIHYtc2hvdz0idXNlX0JLaW5nR3AiIGNsYXNzPSIgbXItMyIgbGFiZWw9IuWuouS6uuWCmeiouyIgdi1tb2RlbD0iIHR1dG9yaWFsLm1lbW8gIiBAY2hhbmdlPSJ1cGxkcGxheUdwKHR1dG9yaWFsKSIgZGVuc2U+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNwYW4tNSBmbGV4Ij4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQgc29sbyBjbGFzcz0idy0xLzUgbXgtNiIgbGFiZWw9IueJjOiZnyIgICAgIHYtbW9kZWw9IiB0dXRvcmlhbC50bXBfaWR4ICIgICBAY2hhbmdlPSJ1cGxkdG1wX2lkeCh0dXRvcmlhbCkiIGRlbnNlPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCAgY2xhc3M9InctMS81IG14LTMiIGxhYmVsPSLpm6LloLTmmYLplpMiIHYtbW9kZWw9IiB0dXRvcmlhbC5sZWZ0X3RpbWUgIiBAY2hhbmdlPSJ1cGxkbGVmdF90aW1lKHR1dG9yaWFsKSIgZGVuc2U+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcC1ncm91cCB2LW1vZGVsPSJ0dXRvcmlhbC5wbHlfc3RhdHUiIEBjaGFuZ2U9InVwbGRTdGF0dSh0dXRvcmlhbCkiIGNvbHVtbiAgY2xhc3M9InctMy81IiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgc21hbGwgb3V0bGluZWQgdmFsdWU9IummluasoSIgPiAg6aaW5qyhIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIHNtYWxsIG91dGxpbmVkIHZhbHVlPSLlhY3orJvnv5IiID4gIOWFjeism+e/kiA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBzbWFsbCBvdXRsaW5lZCB2YWx1ZT0i57qMMC41IiBAY2xpY2s9ImxlZnRfTWRmKDEsdHV0b3JpYWwpIiA+ICDnuozmmYIwLjUgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgc21hbGwgb3V0bGluZWQgdmFsdWU9Iue6jDEuMCIgQGNsaWNrPSJsZWZ0X01kZigyLHR1dG9yaWFsKSIgPiAg57qM5pmCMS4wIDwvdi1jaGlwPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwLWdyb3VwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0tY29udGVudD4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtLWNvbnRlbnQgY2xhc3M9IiB0ZXh0LXhzICBweS0yIHBsLTMgbXktMSBib3JkZXItMiByb3VuZGVkLXNtIGJnLXJlZC0xMDAgYm9yZGVyLXJlZC0zMDAgIiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtaWY9InR1dG9yaWFsLnNubyA9PScxMSd8IHR1dG9yaWFsLnNubyA9PScxMicgIiBAY2xpY2s9InNldEFjdGl2ZVR1dG9yaWFsKHR1dG9yaWFsLCBpbmRleCkiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJncmlkIGdyaWQtY29scy03IGdhcC0xIj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zcGFuLTIgZmxleCBKdXN0aWZ5LWVuZCI+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYnRuIGNsYXNzPSIgbXgtNiIgIHYtc2hvdz0iZGlhbG9nIiAgQGNsaWNrPSJ1cGxkX0NsYWVyKHR1dG9yaWFsKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg5riF5o6D6Z225L2NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBjbGFzcz0ibXktMiBtci0zIiAgIDpjb2xvcj0iQ2hrVGltZTJnZXRDb2xvcih0dXRvcmlhbC5sZWZ0X3RpbWUpIiA+ICB7eyB0dXRvcmlhbC5wb3MgfX1fe3sgdHV0b3JpYWwuc25vIH19X3t7IHR1dG9yaWFsLnNub19pZHggfX0gIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCAgdi1zaG93PSJ1c2VfQktpbmdHcCIgY2xhc3M9IiBtci0zIiBsYWJlbD0i5a6i5Lq65YKZ6Ki7IiB2LW1vZGVsPSIgdHV0b3JpYWwubWVtbyAiIEBjaGFuZ2U9InVwbGRwbGF5R3AodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc3Bhbi01IGZsZXgiPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCBzb2xvIGNsYXNzPSJ3LTEvNSBteC02IiBsYWJlbD0i54mM6JmfIiAgICAgdi1tb2RlbD0iIHR1dG9yaWFsLnRtcF9pZHggIiAgIEBjaGFuZ2U9InVwbGR0bXBfaWR4KHR1dG9yaWFsKSIgZGVuc2U+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkICBjbGFzcz0idy0xLzUgbXgtMyIgbGFiZWw9IumbouWgtOaZgumWkyIgdi1tb2RlbD0iIHR1dG9yaWFsLmxlZnRfdGltZSAiIEBjaGFuZ2U9InVwbGRsZWZ0X3RpbWUodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwLWdyb3VwIHYtbW9kZWw9InR1dG9yaWFsLnBseV9zdGF0dSIgQGNoYW5nZT0idXBsZFN0YXR1KHR1dG9yaWFsKSIgY29sdW1uICBjbGFzcz0idy0zLzUiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBzbWFsbCBvdXRsaW5lZCB2YWx1ZT0i6aaW5qyhIiA+ICDpppbmrKEgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgc21hbGwgb3V0bGluZWQgdmFsdWU9IuWFjeism+e/kiIgPiAg5YWN6Kyb57+SIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIHNtYWxsIG91dGxpbmVkIHZhbHVlPSLnuowwLjUiIEBjbGljaz0ibGVmdF9NZGYoMSx0dXRvcmlhbCkiID4gIOe6jOaZgjAuNSA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBzbWFsbCBvdXRsaW5lZCB2YWx1ZT0i57qMMS4wIiBAY2xpY2s9ImxlZnRfTWRmKDIsdHV0b3JpYWwpIiA+ICDnuozmmYIxLjAgPC92LWNoaXA+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNoaXAtZ3JvdXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbS1jb250ZW50PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbT4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0tZ3JvdXA+ICAKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICA8L3YtdGFiLWl0ZW0+CiAgICAKICAgICAgICAgICAgICAgIDx2LXRhYi1pdGVtIGtleT0nazInIHZhbHVlPSdrMic+IAogICAgICAgICAgICAgICAgICAgIDxkaXY+ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtLWdyb3VwIGNvbG9yPSJwcmltYXJ5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1saXN0LWl0ZW0gdi1mb3I9Iih0dXRvcmlhbCwgaW5kZXgpIGluIHR1dG9yaWFscyIgOmtleT0iaW5kZXgiIHYtaWY9InR1dG9yaWFsLnBvcyA9PSfljZcnIiBAY2xpY2s9InNldEFjdGl2ZVR1dG9yaWFsKHR1dG9yaWFsLCBpbmRleCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWxpc3QtaXRlbS1jb250ZW50IGNsYXNzPSIgdGV4dC14cyAgcHktMiBwbC0zIG15LTEgYm9yZGVyLTIgcm91bmRlZC1zbSBiZy1ibHVlLTEwMCBib3JkZXItYmx1ZS0zMDAgIiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtaWY9InR1dG9yaWFsLnNubyA9PScxMid8IHR1dG9yaWFsLnNubyA9PScxMycgIiBAY2xpY2s9InNldEFjdGl2ZVR1dG9yaWFsKHR1dG9yaWFsLCBpbmRleCkiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJncmlkIGdyaWQtY29scy03IGdhcC0xIj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zcGFuLTIgZmxleCBKdXN0aWZ5LWVuZCI+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYnRuIGNsYXNzPSIgbXgtNiIgIHYtc2hvdz0iZGlhbG9nIiAgQGNsaWNrPSJ1cGxkX0NsYWVyKHR1dG9yaWFsKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg5riF5o6D6Z225L2NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBjbGFzcz0ibXktMiBtci0zIiAgIDpjb2xvcj0iQ2hrVGltZTJnZXRDb2xvcih0dXRvcmlhbC5sZWZ0X3RpbWUpIiA+ICB7eyB0dXRvcmlhbC5wb3MgfX1fe3sgdHV0b3JpYWwuc25vIH19X3t7IHR1dG9yaWFsLnNub19pZHggfX0gIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCAgdi1zaG93PSJ1c2VfQktpbmdHcCIgY2xhc3M9IiBtci0zIiBsYWJlbD0i5a6i5Lq65YKZ6Ki7IiB2LW1vZGVsPSIgdHV0b3JpYWwubWVtbyAiIEBjaGFuZ2U9InVwbGRwbGF5R3AodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc3Bhbi01IGZsZXgiPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCBzb2xvIGNsYXNzPSJ3LTEvNSBteC02IiBsYWJlbD0i54mM6JmfIiAgICAgdi1tb2RlbD0iIHR1dG9yaWFsLnRtcF9pZHggIiAgIEBjaGFuZ2U9InVwbGR0bXBfaWR4KHR1dG9yaWFsKSIgZGVuc2U+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkICBjbGFzcz0idy0xLzUgbXgtMyIgbGFiZWw9IumbouWgtOaZgumWkyIgdi1tb2RlbD0iIHR1dG9yaWFsLmxlZnRfdGltZSAiIEBjaGFuZ2U9InVwbGRsZWZ0X3RpbWUodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwLWdyb3VwIHYtbW9kZWw9InR1dG9yaWFsLnBseV9zdGF0dSIgQGNoYW5nZT0idXBsZFN0YXR1KHR1dG9yaWFsKSIgY29sdW1uICBjbGFzcz0idy0zLzUiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBzbWFsbCBvdXRsaW5lZCB2YWx1ZT0i6aaW5qyhIiA+ICDpppbmrKEgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgc21hbGwgb3V0bGluZWQgdmFsdWU9IuWFjeism+e/kiIgPiAg5YWN6Kyb57+SIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIHNtYWxsIG91dGxpbmVkIHZhbHVlPSLnuowwLjUiIEBjbGljaz0ibGVmdF9NZGYoMSx0dXRvcmlhbCkiID4gIOe6jOaZgjAuNSA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBzbWFsbCBvdXRsaW5lZCB2YWx1ZT0i57qMMS4wIiBAY2xpY2s9ImxlZnRfTWRmKDIsdHV0b3JpYWwpIiA+ICDnuozmmYIxLjAgPC92LWNoaXA+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNoaXAtZ3JvdXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbS1jb250ZW50PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1saXN0LWl0ZW0tY29udGVudCBjbGFzcz0iIHRleHQteHMgIHB5LTIgcGwtMyBteS0xIGJvcmRlci0yIHJvdW5kZWQtc20gYmctZ3JlZW4tMTAwIGJvcmRlci1ncmVlbi0zMDAgIiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtaWY9InR1dG9yaWFsLnNubyA9PScxNCd8IHR1dG9yaWFsLnNubyA9PScxNScgIiBAY2xpY2s9InNldEFjdGl2ZVR1dG9yaWFsKHR1dG9yaWFsLCBpbmRleCkiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJncmlkIGdyaWQtY29scy03IGdhcC0xIj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zcGFuLTIgZmxleCBKdXN0aWZ5LWVuZCI+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYnRuIGNsYXNzPSIgbXgtNiIgIHYtc2hvdz0iZGlhbG9nIiAgQGNsaWNrPSJ1cGxkX0NsYWVyKHR1dG9yaWFsKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg5riF5o6D6Z225L2NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBjbGFzcz0ibXktMiBtci0zIiAgIDpjb2xvcj0iQ2hrVGltZTJnZXRDb2xvcih0dXRvcmlhbC5sZWZ0X3RpbWUpIiA+ICB7eyB0dXRvcmlhbC5wb3MgfX1fe3sgdHV0b3JpYWwuc25vIH19X3t7IHR1dG9yaWFsLnNub19pZHggfX0gIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCAgdi1zaG93PSJ1c2VfQktpbmdHcCIgY2xhc3M9IiBtci0zIiBsYWJlbD0i5a6i5Lq65YKZ6Ki7IiB2LW1vZGVsPSIgdHV0b3JpYWwubWVtbyAiIEBjaGFuZ2U9InVwbGRwbGF5R3AodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc3Bhbi01IGZsZXgiPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCBzb2xvIGNsYXNzPSJ3LTEvNSBteC02IiBsYWJlbD0i54mM6JmfIiAgICAgdi1tb2RlbD0iIHR1dG9yaWFsLnRtcF9pZHggIiAgIEBjaGFuZ2U9InVwbGR0bXBfaWR4KHR1dG9yaWFsKSIgZGVuc2U+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkICBjbGFzcz0idy0xLzUgbXgtMyIgbGFiZWw9IumbouWgtOaZgumWkyIgdi1tb2RlbD0iIHR1dG9yaWFsLmxlZnRfdGltZSAiIEBjaGFuZ2U9InVwbGRsZWZ0X3RpbWUodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwLWdyb3VwIHYtbW9kZWw9InR1dG9yaWFsLnBseV9zdGF0dSIgQGNoYW5nZT0idXBsZFN0YXR1KHR1dG9yaWFsKSIgY29sdW1uICBjbGFzcz0idy0zLzUiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBzbWFsbCBvdXRsaW5lZCB2YWx1ZT0i6aaW5qyhIiA+ICDpppbmrKEgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgc21hbGwgb3V0bGluZWQgdmFsdWU9IuWFjeism+e/kiIgPiAg5YWN6Kyb57+SIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIHNtYWxsIG91dGxpbmVkIHZhbHVlPSLnuowwLjUiIEBjbGljaz0ibGVmdF9NZGYoMSx0dXRvcmlhbCkiID4gIOe6jOaZgjAuNSA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBzbWFsbCBvdXRsaW5lZCB2YWx1ZT0i57qMMS4wIiBAY2xpY2s9ImxlZnRfTWRmKDIsdHV0b3JpYWwpIiA+ICDnuozmmYIxLjAgPC92LWNoaXA+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNoaXAtZ3JvdXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbS1jb250ZW50PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1saXN0LWl0ZW0tY29udGVudCBjbGFzcz0iIHRleHQteHMgIHB5LTIgcGwtMyBteS0xIGJvcmRlci0yIHJvdW5kZWQtc20gYmctcmVkLTEwMCBib3JkZXItcmVkLTMwMCAiIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1pZj0idHV0b3JpYWwuc25vID09JzE2J3wgdHV0b3JpYWwuc25vID09JzE3JyAiIEBjbGljaz0ic2V0QWN0aXZlVHV0b3JpYWwodHV0b3JpYWwsIGluZGV4KSIgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdyaWQgZ3JpZC1jb2xzLTcgZ2FwLTEiPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNwYW4tMiBmbGV4IEp1c3RpZnktZW5kIj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1idG4gY2xhc3M9IiBteC02IiAgdi1zaG93PSJkaWFsb2ciICBAY2xpY2s9InVwbGRfQ2xhZXIodHV0b3JpYWwpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDmuIXmjoPpnbbkvY0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtYnRuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGNsYXNzPSJteS0yIG1yLTMiICAgOmNvbG9yPSJDaGtUaW1lMmdldENvbG9yKHR1dG9yaWFsLmxlZnRfdGltZSkiID4gIHt7IHR1dG9yaWFsLnBvcyB9fV97eyB0dXRvcmlhbC5zbm8gfX1fe3sgdHV0b3JpYWwuc25vX2lkeCB9fSAgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkICB2LXNob3c9InVzZV9CS2luZ0dwIiBjbGFzcz0iIG1yLTMiIGxhYmVsPSLlrqLkurrlgpnoqLsiIHYtbW9kZWw9IiB0dXRvcmlhbC5tZW1vICIgQGNoYW5nZT0idXBsZHBsYXlHcCh0dXRvcmlhbCkiIGRlbnNlPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zcGFuLTUgZmxleCI+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkIHNvbG8gY2xhc3M9InctMS81IG14LTYiIGxhYmVsPSLniYzomZ8iICAgICB2LW1vZGVsPSIgdHV0b3JpYWwudG1wX2lkeCAiICAgQGNoYW5nZT0idXBsZHRtcF9pZHgodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQgIGNsYXNzPSJ3LTEvNSBteC0zIiBsYWJlbD0i6Zui5aC05pmC6ZaTIiB2LW1vZGVsPSIgdHV0b3JpYWwubGVmdF90aW1lICIgQGNoYW5nZT0idXBsZGxlZnRfdGltZSh0dXRvcmlhbCkiIGRlbnNlPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAtZ3JvdXAgdi1tb2RlbD0idHV0b3JpYWwucGx5X3N0YXR1IiBAY2hhbmdlPSJ1cGxkU3RhdHUodHV0b3JpYWwpIiBjb2x1bW4gIGNsYXNzPSJ3LTMvNSIgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIHNtYWxsIG91dGxpbmVkIHZhbHVlPSLpppbmrKEiID4gIOmmluasoSA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBzbWFsbCBvdXRsaW5lZCB2YWx1ZT0i5YWN6Kyb57+SIiA+ICDlhY3orJvnv5IgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgc21hbGwgb3V0bGluZWQgdmFsdWU9Iue6jDAuNSIgQGNsaWNrPSJsZWZ0X01kZigxLHR1dG9yaWFsKSIgPiAg57qM5pmCMC41IDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIHNtYWxsIG91dGxpbmVkIHZhbHVlPSLnuowxLjAiIEBjbGljaz0ibGVmdF9NZGYoMix0dXRvcmlhbCkiID4gIOe6jOaZgjEuMCA8L3YtY2hpcD4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtY2hpcC1ncm91cD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtbGlzdC1pdGVtLWNvbnRlbnQ+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWxpc3QtaXRlbS1jb250ZW50IGNsYXNzPSIgdGV4dC14cyAgcHktMiBwbC0zIG15LTEgYm9yZGVyLTIgcm91bmRlZC1zbSBiZy1ncmVlbi0xMDAgYm9yZGVyLWdyZWVuLTMwMCAiIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1pZj0idHV0b3JpYWwuc25vID09JzE4J3wgdHV0b3JpYWwuc25vID09JzE5JyAiIEBjbGljaz0ic2V0QWN0aXZlVHV0b3JpYWwodHV0b3JpYWwsIGluZGV4KSIgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdyaWQgZ3JpZC1jb2xzLTcgZ2FwLTEiPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNwYW4tMiBmbGV4IEp1c3RpZnktZW5kIj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1idG4gY2xhc3M9IiBteC02IiAgdi1zaG93PSJkaWFsb2ciICBAY2xpY2s9InVwbGRfQ2xhZXIodHV0b3JpYWwpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDmuIXmjoPpnbbkvY0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtYnRuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGNsYXNzPSJteS0yIG1yLTMiICAgOmNvbG9yPSJDaGtUaW1lMmdldENvbG9yKHR1dG9yaWFsLmxlZnRfdGltZSkiID4gIHt7IHR1dG9yaWFsLnBvcyB9fV97eyB0dXRvcmlhbC5zbm8gfX1fe3sgdHV0b3JpYWwuc25vX2lkeCB9fSAgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkICB2LXNob3c9InVzZV9CS2luZ0dwIiBjbGFzcz0iIG1yLTMiIGxhYmVsPSLlrqLkurrlgpnoqLsiIHYtbW9kZWw9IiB0dXRvcmlhbC5tZW1vICIgQGNoYW5nZT0idXBsZHBsYXlHcCh0dXRvcmlhbCkiIGRlbnNlPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zcGFuLTUgZmxleCI+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkIHNvbG8gY2xhc3M9InctMS81IG14LTYiIGxhYmVsPSLniYzomZ8iICAgICB2LW1vZGVsPSIgdHV0b3JpYWwudG1wX2lkeCAiICAgQGNoYW5nZT0idXBsZHRtcF9pZHgodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQgIGNsYXNzPSJ3LTEvNSBteC0zIiBsYWJlbD0i6Zui5aC05pmC6ZaTIiB2LW1vZGVsPSIgdHV0b3JpYWwubGVmdF90aW1lICIgQGNoYW5nZT0idXBsZGxlZnRfdGltZSh0dXRvcmlhbCkiIGRlbnNlPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAtZ3JvdXAgdi1tb2RlbD0idHV0b3JpYWwucGx5X3N0YXR1IiBAY2hhbmdlPSJ1cGxkU3RhdHUodHV0b3JpYWwpIiBjb2x1bW4gIGNsYXNzPSJ3LTMvNSIgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIHNtYWxsIG91dGxpbmVkIHZhbHVlPSLpppbmrKEiID4gIOmmluasoSA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBzbWFsbCBvdXRsaW5lZCB2YWx1ZT0i5YWN6Kyb57+SIiA+ICDlhY3orJvnv5IgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgc21hbGwgb3V0bGluZWQgdmFsdWU9Iue6jDAuNSIgQGNsaWNrPSJsZWZ0X01kZigxLHR1dG9yaWFsKSIgPiAg57qM5pmCMC41IDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIHNtYWxsIG91dGxpbmVkIHZhbHVlPSLnuowxLjAiIEBjbGljaz0ibGVmdF9NZGYoMix0dXRvcmlhbCkiID4gIOe6jOaZgjEuMCA8L3YtY2hpcD4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtY2hpcC1ncm91cD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtbGlzdC1pdGVtLWNvbnRlbnQ+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWxpc3QtaXRlbS1jb250ZW50IGNsYXNzPSIgdGV4dC14cyAgcHktMiBwbC0zIG15LTEgYm9yZGVyLTIgcm91bmRlZC1zbSBiZy0tMTAwIGJvcmRlci1yZWQtMzAwICIgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LWlmPSJ0dXRvcmlhbC5zbm8gPT0nMjAnfCB0dXRvcmlhbC5zbm8gPT0nMjEnICIgQGNsaWNrPSJzZXRBY3RpdmVUdXRvcmlhbCh0dXRvcmlhbCwgaW5kZXgpIiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ3JpZCBncmlkLWNvbHMtNyBnYXAtMSI+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc3Bhbi0yIGZsZXggSnVzdGlmeS1lbmQiPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biBjbGFzcz0iIG14LTYiICB2LXNob3c9ImRpYWxvZyIgIEBjbGljaz0idXBsZF9DbGFlcih0dXRvcmlhbCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOa4heaOg+mdtuS9jQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1idG4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgY2xhc3M9Im15LTIgbXItMyIgICA6Y29sb3I9IkNoa1RpbWUyZ2V0Q29sb3IodHV0b3JpYWwubGVmdF90aW1lKSIgPiAge3sgdHV0b3JpYWwucG9zIH19X3t7IHR1dG9yaWFsLnNubyB9fV97eyB0dXRvcmlhbC5zbm9faWR4IH19ICA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQgIHYtc2hvdz0idXNlX0JLaW5nR3AiIGNsYXNzPSIgbXItMyIgbGFiZWw9IuWuouS6uuWCmeiouyIgdi1tb2RlbD0iIHR1dG9yaWFsLm1lbW8gIiBAY2hhbmdlPSJ1cGxkcGxheUdwKHR1dG9yaWFsKSIgZGVuc2U+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNwYW4tNSBmbGV4Ij4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQgc29sbyBjbGFzcz0idy0xLzUgbXgtNiIgbGFiZWw9IueJjOiZnyIgICAgIHYtbW9kZWw9IiB0dXRvcmlhbC50bXBfaWR4ICIgICBAY2hhbmdlPSJ1cGxkdG1wX2lkeCh0dXRvcmlhbCkiIGRlbnNlPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCAgY2xhc3M9InctMS81IG14LTMiIGxhYmVsPSLpm6LloLTmmYLplpMiIHYtbW9kZWw9IiB0dXRvcmlhbC5sZWZ0X3RpbWUgIiBAY2hhbmdlPSJ1cGxkbGVmdF90aW1lKHR1dG9yaWFsKSIgZGVuc2U+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcC1ncm91cCB2LW1vZGVsPSJ0dXRvcmlhbC5wbHlfc3RhdHUiIEBjaGFuZ2U9InVwbGRTdGF0dSh0dXRvcmlhbCkiIGNvbHVtbiAgY2xhc3M9InctMy81IiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgc21hbGwgb3V0bGluZWQgdmFsdWU9IummluasoSIgPiAg6aaW5qyhIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIHNtYWxsIG91dGxpbmVkIHZhbHVlPSLlhY3orJvnv5IiID4gIOWFjeism+e/kiA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBzbWFsbCBvdXRsaW5lZCB2YWx1ZT0i57qMMC41IiBAY2xpY2s9ImxlZnRfTWRmKDEsdHV0b3JpYWwpIiA+ICDnuozmmYIwLjUgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgc21hbGwgb3V0bGluZWQgdmFsdWU9Iue6jDEuMCIgQGNsaWNrPSJsZWZ0X01kZigyLHR1dG9yaWFsKSIgPiAg57qM5pmCMS4wIDwvdi1jaGlwPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwLWdyb3VwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0tY29udGVudD4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtLWNvbnRlbnQgY2xhc3M9IiB0ZXh0LXhzICBweS0yIHBsLTMgbXktMSBib3JkZXItMiByb3VuZGVkLXNtIGJnLXllbGx3by0xMDAgYm9yZGVyLXllbGx3by0zMDAgIiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtaWY9InR1dG9yaWFsLnNubyA9PScyMid8IHR1dG9yaWFsLnNubyA9PScyMycgIiBAY2xpY2s9InNldEFjdGl2ZVR1dG9yaWFsKHR1dG9yaWFsLCBpbmRleCkiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJncmlkIGdyaWQtY29scy03IGdhcC0xIj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zcGFuLTIgZmxleCBKdXN0aWZ5LWVuZCI+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYnRuIGNsYXNzPSIgbXgtNiIgIHYtc2hvdz0iZGlhbG9nIiAgQGNsaWNrPSJ1cGxkX0NsYWVyKHR1dG9yaWFsKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg5riF5o6D6Z225L2NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBjbGFzcz0ibXktMiBtci0zIiAgIDpjb2xvcj0iQ2hrVGltZTJnZXRDb2xvcih0dXRvcmlhbC5sZWZ0X3RpbWUpIiA+ICB7eyB0dXRvcmlhbC5wb3MgfX1fe3sgdHV0b3JpYWwuc25vIH19X3t7IHR1dG9yaWFsLnNub19pZHggfX0gIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCAgdi1zaG93PSJ1c2VfQktpbmdHcCIgY2xhc3M9IiBtci0zIiBsYWJlbD0i5a6i5Lq65YKZ6Ki7IiB2LW1vZGVsPSIgdHV0b3JpYWwubWVtbyAiIEBjaGFuZ2U9InVwbGRwbGF5R3AodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc3Bhbi01IGZsZXgiPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCBzb2xvIGNsYXNzPSJ3LTEvNSBteC02IiBsYWJlbD0i54mM6JmfIiAgICAgdi1tb2RlbD0iIHR1dG9yaWFsLnRtcF9pZHggIiAgIEBjaGFuZ2U9InVwbGR0bXBfaWR4KHR1dG9yaWFsKSIgZGVuc2U+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkICBjbGFzcz0idy0xLzUgbXgtMyIgbGFiZWw9IumbouWgtOaZgumWkyIgdi1tb2RlbD0iIHR1dG9yaWFsLmxlZnRfdGltZSAiIEBjaGFuZ2U9InVwbGRsZWZ0X3RpbWUodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwLWdyb3VwIHYtbW9kZWw9InR1dG9yaWFsLnBseV9zdGF0dSIgQGNoYW5nZT0idXBsZFN0YXR1KHR1dG9yaWFsKSIgY29sdW1uICBjbGFzcz0idy0zLzUiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBzbWFsbCBvdXRsaW5lZCB2YWx1ZT0i6aaW5qyhIiA+ICDpppbmrKEgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgc21hbGwgb3V0bGluZWQgdmFsdWU9IuWFjeism+e/kiIgPiAg5YWN6Kyb57+SIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIHNtYWxsIG91dGxpbmVkIHZhbHVlPSLnuowwLjUiIEBjbGljaz0ibGVmdF9NZGYoMSx0dXRvcmlhbCkiID4gIOe6jOaZgjAuNSA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBzbWFsbCBvdXRsaW5lZCB2YWx1ZT0i57qMMS4wIiBAY2xpY2s9ImxlZnRfTWRmKDIsdHV0b3JpYWwpIiA+ICDnuozmmYIxLjAgPC92LWNoaXA+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNoaXAtZ3JvdXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbS1jb250ZW50PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1saXN0LWl0ZW0tY29udGVudCBjbGFzcz0iIHRleHQteHMgIHB5LTIgcGwtMyBteS0xIGJvcmRlci0yIHJvdW5kZWQtc20gYmctYmx1ZS0xMDAgYm9yZGVyLWJsdWUtMzAwICIgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LWlmPSJ0dXRvcmlhbC5zbm8gPT0nMjQnfCB0dXRvcmlhbC5zbm8gPT0nMjUnICIgQGNsaWNrPSJzZXRBY3RpdmVUdXRvcmlhbCh0dXRvcmlhbCwgaW5kZXgpIiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ3JpZCBncmlkLWNvbHMtNyBnYXAtMSI+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc3Bhbi0yIGZsZXggSnVzdGlmeS1lbmQiPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biBjbGFzcz0iIG14LTYiICB2LXNob3c9ImRpYWxvZyIgIEBjbGljaz0idXBsZF9DbGFlcih0dXRvcmlhbCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOa4heaOg+mdtuS9jQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1idG4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgY2xhc3M9Im15LTIgbXItMyIgICA6Y29sb3I9IkNoa1RpbWUyZ2V0Q29sb3IodHV0b3JpYWwubGVmdF90aW1lKSIgPiAge3sgdHV0b3JpYWwucG9zIH19X3t7IHR1dG9yaWFsLnNubyB9fV97eyB0dXRvcmlhbC5zbm9faWR4IH19ICA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQgIHYtc2hvdz0idXNlX0JLaW5nR3AiIGNsYXNzPSIgbXItMyIgbGFiZWw9IuWuouS6uuWCmeiouyIgdi1tb2RlbD0iIHR1dG9yaWFsLm1lbW8gIiBAY2hhbmdlPSJ1cGxkcGxheUdwKHR1dG9yaWFsKSIgZGVuc2U+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNwYW4tNSBmbGV4Ij4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQgc29sbyBjbGFzcz0idy0xLzUgbXgtNiIgbGFiZWw9IueJjOiZnyIgICAgIHYtbW9kZWw9IiB0dXRvcmlhbC50bXBfaWR4ICIgICBAY2hhbmdlPSJ1cGxkdG1wX2lkeCh0dXRvcmlhbCkiIGRlbnNlPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCAgY2xhc3M9InctMS81IG14LTMiIGxhYmVsPSLpm6LloLTmmYLplpMiIHYtbW9kZWw9IiB0dXRvcmlhbC5sZWZ0X3RpbWUgIiBAY2hhbmdlPSJ1cGxkbGVmdF90aW1lKHR1dG9yaWFsKSIgZGVuc2U+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcC1ncm91cCB2LW1vZGVsPSJ0dXRvcmlhbC5wbHlfc3RhdHUiIEBjaGFuZ2U9InVwbGRTdGF0dSh0dXRvcmlhbCkiIGNvbHVtbiAgY2xhc3M9InctMy81IiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgc21hbGwgb3V0bGluZWQgdmFsdWU9IummluasoSIgPiAg6aaW5qyhIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIHNtYWxsIG91dGxpbmVkIHZhbHVlPSLlhY3orJvnv5IiID4gIOWFjeism+e/kiA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBzbWFsbCBvdXRsaW5lZCB2YWx1ZT0i57qMMC41IiBAY2xpY2s9ImxlZnRfTWRmKDEsdHV0b3JpYWwpIiA+ICDnuozmmYIwLjUgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgc21hbGwgb3V0bGluZWQgdmFsdWU9Iue6jDEuMCIgQGNsaWNrPSJsZWZ0X01kZigyLHR1dG9yaWFsKSIgPiAg57qM5pmCMS4wIDwvdi1jaGlwPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwLWdyb3VwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0tY29udGVudD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtbGlzdC1pdGVtLWdyb3VwPiAgCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAo8IS0tIAogICAgICAgICAgICAgICAgICAgIDxkaXY+IAogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtZm9yPSIodHV0b3JpYWwsIG4pIGluIHR1dG9yaWFscyIgOmtleT0ibiIgdi1pZj0idHV0b3JpYWwucG9zID09J+WNlyciIEBjbGljaz0ic2V0QWN0aXZlVHV0b3JpYWwodHV0b3JpYWwsIG4pIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IiB0ZXh0LXhzICBweS0yIHBsLTMgbXktMSBib3JkZXItMiByb3VuZGVkLXNtIGJnLWJsdWUtMTAwIGJvcmRlci1ibHVlLTMwMCAiIHYtaWY9InR1dG9yaWFsLnNubyA9PScxMid8IHR1dG9yaWFsLnNubyA9PScxMycgIiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ3JpZCBncmlkLWNvbHMtNyBnYXAtMSI+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc3Bhbi0yIGZsZXggSnVzdGlmeS1lbmQiPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biBjbGFzcz0iIG14LTYiICB2LXNob3c9ImRpYWxvZyIgIEBjbGljaz0idXBsZF9DbGFlcih0dXRvcmlhbCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOa4heaOg+mdtuS9jQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1idG4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgY2xhc3M9Im15LTIgbXItMyIgICA6Y29sb3I9IkNoa1RpbWUyZ2V0Q29sb3IodHV0b3JpYWwubGVmdF90aW1lKSIgPiAge3sgdHV0b3JpYWwucG9zIH19X3t7IHR1dG9yaWFsLnNubyB9fV97eyB0dXRvcmlhbC5zbm9faWR4IH19ICA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQgIHYtc2hvdz0idXNlX0JLaW5nR3AiIGNsYXNzPSIgbXItMyIgbGFiZWw9IuWuouS6uuWCmeiouyIgdi1tb2RlbD0iIHR1dG9yaWFsLm1lbW8gIiBAY2hhbmdlPSJ1cGxkcGxheUdwKHR1dG9yaWFsKSIgZGVuc2U+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNwYW4tNSBmbGV4Ij4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQgc29sbyBjbGFzcz0idy0xLzUgbXgtNiIgbGFiZWw9IueJjOiZnyIgICAgIHYtbW9kZWw9IiB0dXRvcmlhbC50bXBfaWR4ICIgICBAY2hhbmdlPSJ1cGxkdG1wX2lkeCh0dXRvcmlhbCkiIGRlbnNlPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCAgY2xhc3M9InctMS81IG14LTMiIGxhYmVsPSLpm6LloLTmmYLplpMiIHYtbW9kZWw9IiB0dXRvcmlhbC5sZWZ0X3RpbWUgIiBAY2hhbmdlPSJ1cGxkbGVmdF90aW1lKHR1dG9yaWFsKSIgZGVuc2U+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcC1ncm91cCB2LW1vZGVsPSJ0dXRvcmlhbC5wbHlfc3RhdHUiIEBjaGFuZ2U9InVwbGRTdGF0dSh0dXRvcmlhbCkiIGNvbHVtbiAgY2xhc3M9InctMy81IiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgZGVuc2Ugb3V0bGluZWQgdmFsdWU9IummluasoSIgPiAg6aaW5qyhIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIGRlbnNlIG91dGxpbmVkIHZhbHVlPSLlhY3orJvnv5IiID4gIOWFjeism+e/kiA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBkZW5zZSBvdXRsaW5lZCB2YWx1ZT0i57qM5pmCMC41IiBAY2xpY2s9Ik1kZkxmVGltZV8wNSh0dXRvcmlhbCkiID4gIOe6jOaZgjAuNSA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBkZW5zZSBvdXRsaW5lZCB2YWx1ZT0i57qM5pmCMS4wIiBAY2xpY2s9Ik1kZkxmVGltZV8xMCh0dXRvcmlhbCkiID4gIOe6jOaZgjEuMCA8L3YtY2hpcD4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtY2hpcC1ncm91cD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iIHRleHQteHMgIHB5LTIgcGwtMyBteS0xIGJvcmRlci0yIHJvdW5kZWQtc20gYmctZ3JlZW4tMTAwIGJvcmRlci1ncmVlbi0zMDAgIiB2LWlmPSJ0dXRvcmlhbC5zbm8gPT0nMTQnfCB0dXRvcmlhbC5zbm8gPT0nMTUnICIgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdyaWQgZ3JpZC1jb2xzLTcgZ2FwLTEiPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNwYW4tMiBmbGV4IEp1c3RpZnktZW5kIj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1idG4gY2xhc3M9IiBteC02IiAgdi1zaG93PSJkaWFsb2ciICBAY2xpY2s9InVwbGRfQ2xhZXIodHV0b3JpYWwpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDmuIXmjoPpnbbkvY0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtYnRuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGNsYXNzPSJteS0yIG1yLTMiICAgOmNvbG9yPSJDaGtUaW1lMmdldENvbG9yKHR1dG9yaWFsLmxlZnRfdGltZSkiID4gIHt7IHR1dG9yaWFsLnBvcyB9fV97eyB0dXRvcmlhbC5zbm8gfX1fe3sgdHV0b3JpYWwuc25vX2lkeCB9fSAgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkICB2LXNob3c9InVzZV9CS2luZ0dwIiBjbGFzcz0iIG1yLTMiIGxhYmVsPSLlrqLkurrlgpnoqLsiIHYtbW9kZWw9IiB0dXRvcmlhbC5tZW1vICIgQGNoYW5nZT0idXBsZHBsYXlHcCh0dXRvcmlhbCkiIGRlbnNlPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zcGFuLTUgZmxleCI+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkIHNvbG8gY2xhc3M9InctMS81IG14LTYiIGxhYmVsPSLniYzomZ8iICAgICB2LW1vZGVsPSIgdHV0b3JpYWwudG1wX2lkeCAiICAgQGNoYW5nZT0idXBsZHRtcF9pZHgodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQgIGNsYXNzPSJ3LTEvNSBteC0zIiBsYWJlbD0i6Zui5aC05pmC6ZaTIiB2LW1vZGVsPSIgdHV0b3JpYWwubGVmdF90aW1lICIgQGNoYW5nZT0idXBsZGxlZnRfdGltZSh0dXRvcmlhbCkiIGRlbnNlPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAtZ3JvdXAgdi1tb2RlbD0idHV0b3JpYWwucGx5X3N0YXR1IiBAY2hhbmdlPSJ1cGxkU3RhdHUodHV0b3JpYWwpIiBjb2x1bW4gIGNsYXNzPSJ3LTMvNSIgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIGRlbnNlIG91dGxpbmVkIHZhbHVlPSLpppbmrKEiID4gIOmmluasoSA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBkZW5zZSBvdXRsaW5lZCB2YWx1ZT0i5YWN6Kyb57+SIiA+ICDlhY3orJvnv5IgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgZGVuc2Ugb3V0bGluZWQgdmFsdWU9Iue6jOaZgjAuNSIgQGNsaWNrPSJNZGZMZlRpbWVfMDUodHV0b3JpYWwpIiA+ICDnuozmmYIwLjUgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgZGVuc2Ugb3V0bGluZWQgdmFsdWU9Iue6jOaZgjEuMCIgQGNsaWNrPSJNZGZMZlRpbWVfMTAodHV0b3JpYWwpIiA+ICDnuozmmYIxLjAgPC92LWNoaXA+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNoaXAtZ3JvdXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IiB0ZXh0LXhzICBweS0yIHBsLTMgbXktMSBib3JkZXItMiByb3VuZGVkLXNtIGJnLXJlZC0xMDAgYm9yZGVyLXJlZC0zMDAgIiB2LWlmPSJ0dXRvcmlhbC5zbm8gPT0nMTYnfCB0dXRvcmlhbC5zbm8gPT0nMTcnICIgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdyaWQgZ3JpZC1jb2xzLTcgZ2FwLTEiPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNwYW4tMiBmbGV4IEp1c3RpZnktZW5kIj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1idG4gY2xhc3M9IiBteC02IiAgdi1zaG93PSJkaWFsb2ciICBAY2xpY2s9InVwbGRfQ2xhZXIodHV0b3JpYWwpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDmuIXmjoPpnbbkvY0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtYnRuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGNsYXNzPSJteS0yIG1yLTMiICAgOmNvbG9yPSJDaGtUaW1lMmdldENvbG9yKHR1dG9yaWFsLmxlZnRfdGltZSkiID4gIHt7IHR1dG9yaWFsLnBvcyB9fV97eyB0dXRvcmlhbC5zbm8gfX1fe3sgdHV0b3JpYWwuc25vX2lkeCB9fSAgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkICB2LXNob3c9InVzZV9CS2luZ0dwIiBjbGFzcz0iIG1yLTMiIGxhYmVsPSLlrqLkurrlgpnoqLsiIHYtbW9kZWw9IiB0dXRvcmlhbC5tZW1vICIgQGNoYW5nZT0idXBsZHBsYXlHcCh0dXRvcmlhbCkiIGRlbnNlPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zcGFuLTUgZmxleCI+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkIHNvbG8gY2xhc3M9InctMS81IG14LTYiIGxhYmVsPSLniYzomZ8iICAgICB2LW1vZGVsPSIgdHV0b3JpYWwudG1wX2lkeCAiICAgQGNoYW5nZT0idXBsZHRtcF9pZHgodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQgIGNsYXNzPSJ3LTEvNSBteC0zIiBsYWJlbD0i6Zui5aC05pmC6ZaTIiB2LW1vZGVsPSIgdHV0b3JpYWwubGVmdF90aW1lICIgQGNoYW5nZT0idXBsZGxlZnRfdGltZSh0dXRvcmlhbCkiIGRlbnNlPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAtZ3JvdXAgdi1tb2RlbD0idHV0b3JpYWwucGx5X3N0YXR1IiBAY2hhbmdlPSJ1cGxkU3RhdHUodHV0b3JpYWwpIiBjb2x1bW4gIGNsYXNzPSJ3LTMvNSIgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIGRlbnNlIG91dGxpbmVkIHZhbHVlPSLpppbmrKEiID4gIOmmluasoSA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBkZW5zZSBvdXRsaW5lZCB2YWx1ZT0i5YWN6Kyb57+SIiA+ICDlhY3orJvnv5IgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgZGVuc2Ugb3V0bGluZWQgdmFsdWU9Iue6jDAuNSIgQGNsaWNrPSJsZWZ0X01kZigxLHR1dG9yaWFsKSIgPiAg57qM5pmCMC41IDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIGRlbnNlIG91dGxpbmVkIHZhbHVlPSLnuowxLjAiIEBjbGljaz0ibGVmdF9NZGYoMix0dXRvcmlhbCkiID4gIOe6jOaZgjEuMCA8L3YtY2hpcD4gIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNoaXAtZ3JvdXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IiB0ZXh0LXhzICBweS0yIHBsLTMgbXktMSBib3JkZXItMiByb3VuZGVkLXNtIGJnLWdyZWVuLTEwMCBib3JkZXItZ3JlZW4tMzAwICIgdi1pZj0idHV0b3JpYWwuc25vID09JzE4J3wgdHV0b3JpYWwuc25vID09JzE5JyAiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJncmlkIGdyaWQtY29scy03IGdhcC0xIj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zcGFuLTIgZmxleCBKdXN0aWZ5LWVuZCI+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYnRuIGNsYXNzPSIgbXgtNiIgIHYtc2hvdz0iZGlhbG9nIiAgQGNsaWNrPSJ1cGxkX0NsYWVyKHR1dG9yaWFsKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg5riF5o6D6Z225L2NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBjbGFzcz0ibXktMiBtci0zIiAgIDpjb2xvcj0iQ2hrVGltZTJnZXRDb2xvcih0dXRvcmlhbC5sZWZ0X3RpbWUpIiA+ICB7eyB0dXRvcmlhbC5wb3MgfX1fe3sgdHV0b3JpYWwuc25vIH19X3t7IHR1dG9yaWFsLnNub19pZHggfX0gIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCAgdi1zaG93PSJ1c2VfQktpbmdHcCIgY2xhc3M9IiBtci0zIiBsYWJlbD0i5a6i5Lq65YKZ6Ki7IiB2LW1vZGVsPSIgdHV0b3JpYWwubWVtbyAiIEBjaGFuZ2U9InVwbGRwbGF5R3AodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc3Bhbi01IGZsZXgiPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCBzb2xvIGNsYXNzPSJ3LTEvNSBteC02IiBsYWJlbD0i54mM6JmfIiAgICAgdi1tb2RlbD0iIHR1dG9yaWFsLnRtcF9pZHggIiAgIEBjaGFuZ2U9InVwbGR0bXBfaWR4KHR1dG9yaWFsKSIgZGVuc2U+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkICBjbGFzcz0idy0xLzUgbXgtMyIgbGFiZWw9IumbouWgtOaZgumWkyIgdi1tb2RlbD0iIHR1dG9yaWFsLmxlZnRfdGltZSAiIEBjaGFuZ2U9InVwbGRsZWZ0X3RpbWUodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwLWdyb3VwIHYtbW9kZWw9InR1dG9yaWFsLnBseV9zdGF0dSIgQGNoYW5nZT0idXBsZFN0YXR1KHR1dG9yaWFsKSIgY29sdW1uICBjbGFzcz0idy0zLzUiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBkZW5zZSBvdXRsaW5lZCB2YWx1ZT0i6aaW5qyhIiA+ICDpppbmrKEgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgZGVuc2Ugb3V0bGluZWQgdmFsdWU9IuWFjeism+e/kiIgPiAg5YWN6Kyb57+SIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIGRlbnNlIG91dGxpbmVkIHZhbHVlPSLnuowwLjUiIEBjbGljaz0ibGVmdF9NZGYoMSx0dXRvcmlhbCkiID4gIOe6jOaZgjAuNSA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBkZW5zZSBvdXRsaW5lZCB2YWx1ZT0i57qMMS4wIiBAY2xpY2s9ImxlZnRfTWRmKDIsdHV0b3JpYWwpIiA+ICDnuozmmYIxLjAgPC92LWNoaXA+ICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jaGlwLWdyb3VwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iIHRleHQteHMgIHB5LTIgcGwtMyBteS0xIGJvcmRlci0yIHJvdW5kZWQtc20gYmctcmVkLTEwMCBib3JkZXItcmVkLTMwMCAiIHYtaWY9InR1dG9yaWFsLnNubyA9PScyMCd8IHR1dG9yaWFsLnNubyA9PScyMScgIiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ3JpZCBncmlkLWNvbHMtNyBnYXAtMSI+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc3Bhbi0yIGZsZXggSnVzdGlmeS1lbmQiPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biBjbGFzcz0iIG14LTYiICB2LXNob3c9ImRpYWxvZyIgIEBjbGljaz0idXBsZF9DbGFlcih0dXRvcmlhbCkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOa4heaOg+mdtuS9jQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1idG4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgY2xhc3M9Im15LTIgbXItMyIgICA6Y29sb3I9IkNoa1RpbWUyZ2V0Q29sb3IodHV0b3JpYWwubGVmdF90aW1lKSIgPiAge3sgdHV0b3JpYWwucG9zIH19X3t7IHR1dG9yaWFsLnNubyB9fV97eyB0dXRvcmlhbC5zbm9faWR4IH19ICA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQgIHYtc2hvdz0idXNlX0JLaW5nR3AiIGNsYXNzPSIgbXItMyIgbGFiZWw9IuWuouS6uuWCmeiouyIgdi1tb2RlbD0iIHR1dG9yaWFsLm1lbW8gIiBAY2hhbmdlPSJ1cGxkcGxheUdwKHR1dG9yaWFsKSIgZGVuc2U+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNwYW4tNSBmbGV4Ij4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQgc29sbyBjbGFzcz0idy0xLzUgbXgtNiIgbGFiZWw9IueJjOiZnyIgICAgIHYtbW9kZWw9IiB0dXRvcmlhbC50bXBfaWR4ICIgICBAY2hhbmdlPSJ1cGxkdG1wX2lkeCh0dXRvcmlhbCkiIGRlbnNlPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCAgY2xhc3M9InctMS81IG14LTMiIGxhYmVsPSLpm6LloLTmmYLplpMiIHYtbW9kZWw9IiB0dXRvcmlhbC5sZWZ0X3RpbWUgIiBAY2hhbmdlPSJ1cGxkbGVmdF90aW1lKHR1dG9yaWFsKSIgZGVuc2U+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcC1ncm91cCB2LW1vZGVsPSJ0dXRvcmlhbC5wbHlfc3RhdHUiIEBjaGFuZ2U9InVwbGRTdGF0dSh0dXRvcmlhbCkiIGNvbHVtbiAgY2xhc3M9InctMy81IiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgZGVuc2Ugb3V0bGluZWQgdmFsdWU9IummluasoSIgPiAg6aaW5qyhIDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIGRlbnNlIG91dGxpbmVkIHZhbHVlPSLlhY3orJvnv5IiID4gIOWFjeism+e/kiA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBkZW5zZSBvdXRsaW5lZCB2YWx1ZT0i57qMMC41IiBAY2xpY2s9ImxlZnRfTWRmKDEsdHV0b3JpYWwpIiA+ICDnuozmmYIwLjUgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgZGVuc2Ugb3V0bGluZWQgdmFsdWU9Iue6jDEuMCIgQGNsaWNrPSJsZWZ0X01kZigyLHR1dG9yaWFsKSIgPiAg57qM5pmCMS4wIDwvdi1jaGlwPiAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtY2hpcC1ncm91cD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IiB0ZXh0LXhzICBweS0yIHBsLTMgbXktMSBib3JkZXItMiByb3VuZGVkLXNtIGJnLXllbGxvdy0xMDAgYm9yZGVyLXllbGxvdy0zMDAgIiB2LWlmPSJ0dXRvcmlhbC5zbm8gPT0nMjInfCB0dXRvcmlhbC5zbm8gPT0nMjMnICIgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdyaWQgZ3JpZC1jb2xzLTcgZ2FwLTEiPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNwYW4tMiBmbGV4IEp1c3RpZnktZW5kIj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1idG4gY2xhc3M9IiBteC02IiAgdi1zaG93PSJkaWFsb2ciICBAY2xpY2s9InVwbGRfQ2xhZXIodHV0b3JpYWwpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDmuIXmjoPpnbbkvY0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtYnRuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGNsYXNzPSJteS0yIG1yLTMiICAgOmNvbG9yPSJDaGtUaW1lMmdldENvbG9yKHR1dG9yaWFsLmxlZnRfdGltZSkiID4gIHt7IHR1dG9yaWFsLnBvcyB9fV97eyB0dXRvcmlhbC5zbm8gfX1fe3sgdHV0b3JpYWwuc25vX2lkeCB9fSAgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkICB2LXNob3c9InVzZV9CS2luZ0dwIiBjbGFzcz0iIG1yLTMiIGxhYmVsPSLlrqLkurrlgpnoqLsiIHYtbW9kZWw9IiB0dXRvcmlhbC5tZW1vICIgQGNoYW5nZT0idXBsZHBsYXlHcCh0dXRvcmlhbCkiIGRlbnNlPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zcGFuLTUgZmxleCI+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkIHNvbG8gY2xhc3M9InctMS81IG14LTYiIGxhYmVsPSLniYzomZ8iICAgICB2LW1vZGVsPSIgdHV0b3JpYWwudG1wX2lkeCAiICAgQGNoYW5nZT0idXBsZHRtcF9pZHgodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQgIGNsYXNzPSJ3LTEvNSBteC0zIiBsYWJlbD0i6Zui5aC05pmC6ZaTIiB2LW1vZGVsPSIgdHV0b3JpYWwubGVmdF90aW1lICIgQGNoYW5nZT0idXBsZGxlZnRfdGltZSh0dXRvcmlhbCkiIGRlbnNlPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAtZ3JvdXAgdi1tb2RlbD0idHV0b3JpYWwucGx5X3N0YXR1IiBAY2hhbmdlPSJ1cGxkU3RhdHUodHV0b3JpYWwpIiBjb2x1bW4gIGNsYXNzPSJ3LTMvNSIgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIGRlbnNlIG91dGxpbmVkIHZhbHVlPSLpppbmrKEiID4gIOmmluasoSA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBkZW5zZSBvdXRsaW5lZCB2YWx1ZT0i5YWN6Kyb57+SIiA+ICDlhY3orJvnv5IgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgZGVuc2Ugb3V0bGluZWQgdmFsdWU9Iue6jDAuNSIgQGNsaWNrPSJsZWZ0X01kZigxLHR1dG9yaWFsKSIgPiAg57qM5pmCMC41IDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIGRlbnNlIG91dGxpbmVkIHZhbHVlPSLnuowxLjAiIEBjbGljaz0ibGVmdF9NZGYoMix0dXRvcmlhbCkiID4gIOe6jOaZgjEuMCA8L3YtY2hpcD4gIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNoaXAtZ3JvdXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSIgdGV4dC14cyAgcHktMiBwbC0zIG15LTEgYm9yZGVyLTIgcm91bmRlZC1zbSBiZy1ibHVlLTEwMCBib3JkZXItYmx1ZS0zMDAgIiB2LWlmPSJ0dXRvcmlhbC5zbm8gPT0nMjQnfCB0dXRvcmlhbC5zbm8gPT0nMjUnICIgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdyaWQgZ3JpZC1jb2xzLTcgZ2FwLTEiPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNwYW4tMiBmbGV4IEp1c3RpZnktZW5kIj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1idG4gY2xhc3M9IiBteC02IiAgdi1zaG93PSJkaWFsb2ciICBAY2xpY2s9InVwbGRfQ2xhZXIodHV0b3JpYWwpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDmuIXmjoPpnbbkvY0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtYnRuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGNsYXNzPSJteS0yIG1yLTMiICAgOmNvbG9yPSJDaGtUaW1lMmdldENvbG9yKHR1dG9yaWFsLmxlZnRfdGltZSkiID4gIHt7IHR1dG9yaWFsLnBvcyB9fV97eyB0dXRvcmlhbC5zbm8gfX1fe3sgdHV0b3JpYWwuc25vX2lkeCB9fSAgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkICB2LXNob3c9InVzZV9CS2luZ0dwIiBjbGFzcz0iIG1yLTMiIGxhYmVsPSLlrqLkurrlgpnoqLsiIHYtbW9kZWw9IiB0dXRvcmlhbC5tZW1vICIgQGNoYW5nZT0idXBsZHBsYXlHcCh0dXRvcmlhbCkiIGRlbnNlPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zcGFuLTUgZmxleCI+IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkIHNvbG8gY2xhc3M9InctMS81IG14LTYiIGxhYmVsPSLniYzomZ8iICAgICB2LW1vZGVsPSIgdHV0b3JpYWwudG1wX2lkeCAiICAgQGNoYW5nZT0idXBsZHRtcF9pZHgodHV0b3JpYWwpIiBkZW5zZT48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQgIGNsYXNzPSJ3LTEvNSBteC0zIiBsYWJlbD0i6Zui5aC05pmC6ZaTIiB2LW1vZGVsPSIgdHV0b3JpYWwubGVmdF90aW1lICIgQGNoYW5nZT0idXBsZGxlZnRfdGltZSh0dXRvcmlhbCkiIGRlbnNlPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAtZ3JvdXAgdi1tb2RlbD0idHV0b3JpYWwucGx5X3N0YXR1IiBAY2hhbmdlPSJ1cGxkU3RhdHUodHV0b3JpYWwpIiBjb2x1bW4gIGNsYXNzPSJ3LTMvNSIgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIGRlbnNlIG91dGxpbmVkIHZhbHVlPSLpppbmrKEiID4gIOmmluasoSA8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jaGlwIGZpbHRlciBkZW5zZSBvdXRsaW5lZCB2YWx1ZT0i5YWN6Kyb57+SIiA+ICDlhY3orJvnv5IgPC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBmaWx0ZXIgZGVuc2Ugb3V0bGluZWQgdmFsdWU9Iue6jDAuNSIgQGNsaWNrPSJsZWZ0X01kZigxLHR1dG9yaWFsKSIgPiAg57qM5pmCMC41IDwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgZmlsdGVyIGRlbnNlIG91dGxpbmVkIHZhbHVlPSLnuowxLjAiIEBjbGljaz0ibGVmdF9NZGYoMix0dXRvcmlhbCkiID4gIOe6jOaZgjEuMCA8L3YtY2hpcD4gIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNoaXAtZ3JvdXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgLS0+CiAgICAgICAgICAgICAgICA8L3YtdGFiLWl0ZW0+ICAKCiAgICAgICAgICAgICAgICA8di10YWItaXRlbSBrZXk9J2szJyB2YWx1ZT0nazMnPgogCgogICAgICAgICAgICAgICAgPC92LXRhYi1pdGVtPgogICAgCiAgICAKICAgICAgICAgICAgPC92LXRhYnMtaXRlbXM+CiAgICAgICAgICAgIDwvdi1jYXJkPgogICAgICAgIDwvZGl2PgogICAgCiAgICAKICAgIAogICAgPC9kaXY+Cg=="},null]}